Bugs:
- The pre-processing should be made safe by copying the input file (#1058)

Documentation:
- Complete the README
- Update (write from scratch?) the documentation

Features:
- Make the file monitor build a configuration for each file 
  with htaccess-like files (#882)
- Add multi-pass encoding support (#783)
- Add a size/duration limitation for the output targets (#798)
- Compare the duration of the source file and target file if possible (#1061)
- Change the scheduler to use a faire queuing algorithm (#1063)
- Add input file filtering (#1065)
- Add input file rejection (#1066)
- Create an SQL datasource (#1068)
- Create an API for customer/profile/targets modification at runtime (#1069)
- Categorize transcoding errors (#1078)
- Monitor symlinks and reproduce the symlinks for the outgoing files (#1079)
- Write temporary reports in a different directory (#1081)
- Add socket to the file-transcoder to be able to plug processing steps (#1130)
- Make each transcoding log in separate files to be able to add it 
  in the error report
- Add a parameter to acknowledge to say if and where the source file 
  should be moved to be able to make inplace transcoding 
  (without moving the sourcefile).
- Add configuration/report files versioning and automatique upgrading.
- Add authentication token to the datasource/datastore/API to be able to
  manage rights and log who made odifications (#1271)
- Add a transcoding-command component that listen somehow (HTTP GET?) and
  send trancoding request to the admin like the file-monitor (#1272)
- Add a configuration override parameter to the transcoding-command and
  file-monitor components to be able in one case add command parameters
  and in the other have .htaccess like overriding files (#1273)
- Add a start-index config property for the thumbnails (#1311)
- Add a quality property for the thumbnails (#1312)
- Use templating engine for mails and diagnosis reports (#1328)

Bugs:
- When a file is moved to incoming with the exact same name that one that
  has just been moved to done or failed, the monitor think the file has not
  been moved and that it's the same file so it doesn't inform the admin
  that a new file has been added and it's never transcoded. (#1303)

Tests:
- Write manual test procedures (like for FSP)
- More test suites, more test suites, more test suites.

Refactoring:
- Change file-transcoder to use substitution.py class
- Remove multi-interface support for event sources, it's not used
  and make the event handling more complicated
- Change the event source to not have to be able to add an object 
  implementing only a base interface.
  Ex: The admin should be able to only implement IComponentListener
      and register as listnener of a ComponentSet without implementing
      all component interfaces (ITranscoderListener and IMonitorListener)
- Refactor file transcoder contexts to match the admin standard 
  for fileFile, fileDir, fileBase, filePath, fileRelPath, 
  profileName, customerName, targetName.
- Workout a solution to remove the deep references in contexts and stores.
- Better retry count handling for task's components to make the diffrence
  between actively stopped components and crashed components.

