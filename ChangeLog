2007-07-20  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/datastore/customerstore.py (CustomerStore,
	  CustomerStore.getIdentifier, CustomerStore.__cbProfileInitialized):
	Corrected a bug in getters definition.
	Do not use defer._nothing anymore, it's private. Use None insteed.
	Changed to use transcoder's version of defer.py.

2007-07-20  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/datastore/notifystore.py
	  (BaseNotification):	
	* flumotion/transcoder/admin/datastore/configstore.py (BaseConfig):
	Added getIdentifier getters to the store and the activities.

2007-07-20  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/datastore/basestore.py (getter,
	  BaseStore.__init__, BaseStore.waitDatasource):
	Corrected a bug in the basic getter, the default value wasn't used.
	Changed to use transcoder's version of defer.py.

2007-07-20  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/datastore/targetstore.py
	  (TargetStore.getIdentifier):
	* flumotion/transcoder/admin/datastore/profilestore.py
	  (ProfileStore.getIdentifier, ProfileStore.__cbTargetInitialized):	  
	* flumotion/transcoder/admin/datastore/adminstore.py
	  (AdminStore.getIdentifier, AdminStore.__cbCustomerInitialized):
	Added getIdentifier getters to the store and the activities.
	Changed to use transcoder's version of defer.py.

2007-07-20  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/datastore/activitystore.py
	  (ActivityStore.getLabel, ActivityStore.getIdentifier, BaseActivity,
	  BaseActivity.setter, BaseActivity.__init__,
	  TranscodingActivity.getCustomer, TranscodingActivity.getProfile):
	Added getIdentifier getters to the store and the activities.
	Restored the accidentally removed getProfile and getCustomer methods.
	Changed to use transcoder's version of defer.py.

2007-07-20  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/datasource/filesource.py
	  (MutableDataWrapper.__init__, MutableDataWrapper.__setattr__,
	  FileDataSource.initialize, FileDataSource.retrieveActivities,
	  FileDataSource.newActivity):
	Properly create notification activities.
	Made the subtype value read-only.
	Changed to use transcoder's version of defer.py.

2007-07-20  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/admintask.py (AdminTask.waitIdle,
	  AdminTask._stopComponent, AdminTask._deleteComponent,
	  AdminTask.__startup):
	Changed to use transcoder's version of defer.py.
	Do not use defer._nothing anymore, it's private. Use None insteed.

2007-07-20  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/adminelement.py
	  (AdminElement.getIdentifier):
	All admin element have now a getIdentifier method.
	Changed to use transcoder's version of defer.py.

2007-07-20  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/job.py (TranscoderJob.readyForAck,
	  TranscoderJob.acknowledge, TranscoderJob.__ebRecoverableFailure,
	  TranscoderJob.__cbProcessTargets, TranscoderJob.__cbTargetIsAMedia):
	Changed to use transcoder's version of defer.py.
	Do not use defer._nothing anymore, it's private. Use None insteed.

2007-07-20  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/gstutils.py:
	* flumotion/component/transcoder/transcoder.py:
	* flumotion/transcoder/admin/admin.py (TranscoderAdmin.initialize,
	  TranscoderAdmin.__startup, TranscoderAdmin.__resume,
	  TranscoderAdmin.__pause, TranscoderAdmin.__cbAdminInitialized):
	Changed to use transcoder's version of defer.py.
	Do not use defer._nothing anymore, it's private. Use None insteed.

2007-07-20  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/filemonitor.py (FileMonitor.init,
	  FileMonitor.__notifyDebug, FileMonitor.__monitorError,
	  FileMonitor.__unexpectedError):
	* flumotion/component/transcoder/filetranscoder.py
	  (FileTranscoder.init, FileTranscoder.component_stop,
	  FileTranscoder._getReportPath, FileTranscoder.__notifyDebug,
	  FileTranscoder.__transcodingError, FileTranscoder.__cbJobDone,
	  FileTranscoder.__ebJobFailed, FileTranscoder.__cbJobTerminated,
	  FileTranscoder.__ebAcknowledgeError,
	  FileTranscoder.__ebDiagnoseAcknowledgeFail):
	Cannot use self.logException because components 
	inherite from flumotion Loggable, so changed to log.logException.
	Added a debugNotify that add a component message,
	used by transcoder's log and defer modules when
	a traceback is detected.
	Changed to use transcoder's version of defer.py.

2007-07-20  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/base.xml:
	Added the transcoder-specific defer.py

2007-07-20  Sebastien Merle  <sebastien@fluendo.com>

    * flumotion/transcoder/Makefile.am:
    * flumotion/transcoder/defer.py:
    Added a transcoder-specific version of twsited defer.py.
    It allow to callback a notify function when a deferred
    detect a lost failure.
    Moved all utility callback from utils.py to defer.py.

2007-07-20  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/admin.py (TranscoderAdmin.__init__,
	  TranscoderAdmin.initialize, TranscoderAdmin.__cbAdminInitialized):
	Use Notifier.

	* flumotion/transcoder/admin/context/Makefile.am:
	* flumotion/transcoder/admin/context/notifiercontext.py
	  (NotifierContext, NotifierContext.__init__):
	* flumotion/transcoder/admin/context/admincontext.py
	  (AdminContext.getDataSource, AdminContext.getNotifierContext,
	  AdminContext.getWorkerContext):
	Added a notifier context arounf the notifier configuration.
	
	* flumotion/transcoder/admin/notifier.py (Notifier.__init__,
	  Notifier.initialize, Notifier.__doPrepareMailPost,
	  Notifier.__doPerformMailPost):
	Use the notifier context.

2007-07-19  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/log.py (Loggable.warnAndRaise,
	  LoggerProxy.logFailure, LoggerProxy.logException,
	  LoggerProxy.warnAndRaise):
	Added a utility method to Loggable and LoggerProxy
	to do a warning logging and raise an exception at the same time.

2007-07-19  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/scheduler.py
	  (Scheduler.onTranscodingTerminated,
	  Scheduler.__startTranscodingTask):
	Some menor logging changes.

2007-07-19  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/notifier.py (notifyDebug,
	  Notifier.__init__, Notifier.notify, Notifier._postMail,
	  Notifier._performGetRequest, Notifier.__doPrepareGetRequest,
	  Notifier.__doPrepareMailPost, Notifier.__doPerformGetRequest,
	  Notifier.__cbGetPageSucceed, Notifier.__ebGetPageFailed,
	  Notifier.__doPerformMailPost, Notifier.__cbPostMailSucceed,
	  Notifier.__ebPostMailFailed, Notifier.__retryNotification,
	  Notifier.__notificationSucceed, Notifier.__notificationFailed,
	  Notifier.__notificationTerminated, Notifier.__cannotPrepare,
	  Notifier.__cannotPerform, Notifier.__prepareNotification,
	  Notifier.__performNotification):
	Created the Notifier class that is able to notify by mail or by
	GET requests. For each notification it create and store
	an activitie instance.
	It use twisted.web.client to do the GET request and twisted.smtp
	to send the mails.
	The mails are multipart mime, TO, CC, BCC headers 
	and attachments are supported with IDocument.

2007-07-19  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/main.py (main):
	Initialize the log notifier to be able to automaticaly
	send debug mail when getting traceback (for example).

2007-07-19  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/errors.py (OrphanComponentError.__init__,
	  WaiterError.__init__, NotificationError, NotificationError.__init__,
	  DocumentError, DocumentError.__init__):
	Added a NotifierError and DocumentError.

2007-07-19  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/enums.py:
	Changed MailAttachmentEnum to DocumentTypeEnum to be more generical.
	Will be used with IDocument to specify document to the notifier that
	will choose what to do with them.

2007-07-19  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/datastore/targetstore.py (TargetStore):
	Use the new version of MetaStore to generate the getters.	

2007-07-19  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/datastore/profilestore.py (ProfileStore):
	Use the new version of MetaStore to generate the getters.

2007-07-19  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/datastore/notifystore.py
	  (BaseNotification,
	  BaseNotification._admin_overridable_getter_builder,
	  BaseNotification.getter, BaseNotification.getTarget,
	  EMailNotification, EMailNotification.__init__,
	  GETRequestNotification, GETRequestNotification.__init__):
	Now all notifications have timeout, retryMax, and retrySleep.
	Now use MetaStore metaclass to generate the getters.

2007-07-19  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/datastore/notificationstore.py:
	Renamed to notifystore.py

2007-07-19  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/datastore/customerstore.py
	  (CustomerStore):
	Use the new version of MetaStore to generate the getters.

2007-07-19  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/datastore/configstore.py (BaseConfig,
	  AudioConfig, AudioConfig.__init__, VideoConfig, VideoConfig.__init__,
	  AudioVideoConfig, ThumbnailsConfig, ThumbnailsConfig.__init__):
	Now use MetaStore metaclass to generate the getters.

2007-07-19  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/datastore/basestore.py
	  (_basic_getter_builder, getter, _parent_overridable_getter_builder,
	  getter, MetaStore, MetaStore.__init__, MetaStore.createGetters,
	  MetaStore.createSetters):
	Updated MetaStore to be more generic. Now the class that don't inherite
	from BaseStore can use it too, and can create new types of 
	getters/setters with custom builders.

2007-07-19  Sebastien Merle  <sebastien@fluendo.com>
	
	* flumotion/transcoder/admin/datastore/adminstore.py (AdminStore):
	Changed XXXGETRequestXXX for XXXHTTPRequestXXX with the idea of
	supporting POST request in the future.
	Use the new version of MetaStore to generate the getters.

2007-07-19  Sebastien Merle  <sebastien@fluendo.com>
	
	* flumotion/transcoder/admin/datastore/activitystore.py
	  (ActivityStore.getNotifications, ActivityStore.newTranscoding,
	  ActivityStore.newNotification, ActivityStore.__newActivity,
	  ActivityStore.__cbWrapActivities, _buildPropertyGetter, getter,
	  BaseActivity, BaseActivity._data_getter_builder, BaseActivity.getter,
	  BaseActivity._basic_setter_builder, BaseActivity.setter,
	  BaseActivity._data_setter_builder, BaseActivity.setter,
	  BaseActivity.reset, TranscodingActivity,
	  TranscodingActivity.__init__, TranscodingActivity._setup,
	  BaseNotifyActivity, BaseNotifyActivity.__init__,
	  BaseNotifyActivity.incRetryCount, BaseNotifyActivity._setup,
	  GETRequestNotifyActivity, GETRequestNotifyActivity.__init__,
	  MailNotifyActivity, MailNotifyActivity.__init__,
	  MailNotifyActivity.getRecipientsAddr,
	  MailNotifyActivity.setRecipientsAddr, ActivityFactory):
	Added the activity subtype, and now have different activity
	class for the different notification types.
	Use the MetaStor metaclass to generate most of the getters/setters.

2007-07-19  Sebastien Merle  <sebastien@fluendo.com>
	
	* flumotion/transcoder/admin/datastore/Makefile.am:
	Renamed notificationstore.py to notifystore.py.

2007-07-19  Sebastien Merle  <sebastien@fluendo.com>
	
	* flumotion/transcoder/admin/datasource/datasource.py
	  (IDataSource.retrieveDefaults, IDataSource.retrieveCustomers,
	  IDataSource.retrieveGlobalNotifications,
	  IDataSource.retrieveActivities, IDataSource.newActivity,
	  IDataSource.newNotification):
	Now all notifications have timeout, retryMax, and retrySleep.
	All activities have a subtype of type NotificationTypeEnum 
	or TranscodingTypeEnum.

2007-07-19  Sebastien Merle  <sebastien@fluendo.com>
	
	* flumotion/transcoder/admin/adminconsts.py:
	Added notifier-related constants.
	
2007-07-19  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/Makefile.am:
	* flumotion/transcoder/admin/document.py (IDocument,
	  IDocument.getLabel, IDocument.getType, IDocument.getMimeType,
	  IDocument.__str__, IDocument.asString, IDocument.asFile,
	  StringDocument, StringDocument.__init__, StringDocument.getLabel,
	  StringDocument.getType, StringDocument.getMimeType,
	  StringDocument.__str__, StringDocument.asString,
	  StringDocument.asFile, FileDocument, FileDocument.__init__,
	  FileDocument.getLabel, FileDocument.getType,
	  FileDocument.getMimeType, FileDocument.__str__,
	  FileDocument.asString, FileDocument.asFile):
	Added a document wrapper to encapsulate the report, config and log files.
	This way generic document can be passed to the notifier for it
	to choose what to do with them. A document have a type 
	(DocumentTypeEnum) a mime type, a label to identify it and 
	can be retrieved as string or file.

2007-07-19  Sebastien Merle  <sebastien@fluendo.com>
	
	* flumotion/test/test_utils.py (TestUtils.test_joinMailRecipients,
	  TestUtils.check, TestUtils.test_splitMailRecipients,
	  TestUtils.check):
	* flumotion/transcoder/utils.py (joinCommandFields,
	  splitMailRecipients, joinMailRecipients, splitMailAddress,
	  joinMailAddress):
	Added some basic mail address manipulation with tests.

2007-07-19  Sebastien Merle  <sebastien@fluendo.com>
	
	* flumotion/transcoder/admin/datasource/filesource.py
	  (MutableDataWrapper.__setattr__, _createReqNotif, _createMailNotif,
	  FileDataSource.retrieveProfileNotifications):	
	* flumotion/transcoder/admin/datasource/dataprops.py (ProfileData,
	  AdminData, ActivityData, TranscodingActivityData,
	  NotificationActivityData):
	* conf/transcoder-data.ini:
	Update the mail properties from list to a standard
	Name <name.email.com>, Name2 <name2.email.com> representation.

2007-07-19  Sebastien Merle  <sebastien@fluendo.com>

	* conf/transcoder-admin.ini:
	* flumotion/transcoder/admin/adminconfig.py (NotifierConfig):
	Added the notifier section and properties.

2007-07-16  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/filetranscoder.py
	  (FileTranscoder.__cbJobDone, FileTranscoder.__ebJobFailed,
	  FileTranscoder.__cbJobTerminated,
	  FileTranscoder.__ebAcknowledgeError):
	* flumotion/transcoder/log.py (Loggable.logException,
	  getExceptionTraceback):
	Centralized exception logging to be able to send notifications.

2007-07-16  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/filemonitor.py
	  (FileMonitor.__monitorError, FileMonitor.__unexpectedError):
	* flumotion/component/transcoder/filetranscoder.py
	  (FileTranscoder.__transcodingError, FileTranscoder.__unexpectedError,
	  FileTranscoder.__ebDiagnoseAcknowledgeFail):
	* flumotion/transcoder/admin/admin.py
	  (TranscoderAdmin.__ebSartupFailed,
	  TranscoderAdmin.__ebResumingFailed,
	  TranscoderAdmin.__ebPausingFailed):
	* flumotion/transcoder/admin/adminelement.py
	  (AdminElement._unexpectedError, AdminElement.__cbLogFailures):
	* flumotion/transcoder/admin/admintask.py (AdminTask.__ebStartupFailed,
	  AdminTask.__cbMultiDeleteResults, AdminTask.__bbTaskTerminated,
	  AdminTask.__cbMultiUIStateResults,
	  AdminTask.__bbSelectPotentialComponent,
	  AdminTask.__ebPotentialComponentFailure,
	  AdminTask.__ebComponentLoadFailed, AdminTask.__ebComponentNotHappy,
	  AdminTask.__ebUIStateFailed, AdminTask.__ebComponentStopFailed,
	  AdminTask.__ebComponentDeleteFailed, AdminTask.__ebNoValidWorker):
	* flumotion/transcoder/admin/datasource/filesource.py
	  (FileDataSource.__ebActivitiesSaveFailed):
	* flumotion/transcoder/admin/datastore/activitystore.py
	  (BaseActivity.__ebActivityStoreFailed,
	  BaseActivity.__ebActivityDeleteFailed):
	* flumotion/transcoder/admin/datastore/adminstore.py
	  (AdminStore.__ebCustomerInitFailed):
	* flumotion/transcoder/admin/datastore/basestore.py
	  (BaseStore._retrievalFailed, BaseStore.__ebDataSourceError):
	* flumotion/transcoder/admin/datastore/customerstore.py
	  (CustomerStore.__ebProfileInitFailed):
	* flumotion/transcoder/admin/datastore/profilestore.py
	  (ProfileStore.__ebTargetInitFailed):
	* flumotion/transcoder/admin/monitoring.py
	  (Monitoring.__cbStartResumeMonitoring,
	  Monitoring.__ebStartupResumingFailure,
	  Monitoring.__ebAddComponentFailed,
	  Monitoring.__ebRemoveComponentFailed):
	* flumotion/transcoder/admin/montask.py
	  (MonitoringTask.__ebSetFileStateFailed,
	  MonitoringTask.__ebMoveFilesFailed):
	* flumotion/transcoder/admin/proxies/componentset.py
	  (ComponentSetSkeleton.__ebAcceptFailure):
	* flumotion/transcoder/admin/proxies/fluproxy.py
	  (BaseFlumotionProxy.__ebDictElementInitFailed,
	  BaseFlumotionProxy.__ebElementInitFailed):
	* flumotion/transcoder/admin/taskmanager.py
	  (TaskManager.__ebResolveCallFailure,
	  TaskManager.__ebGetPropertiesFailed,
	  TaskManager.__ebComponentStopFailed,
	  TaskManager.__ebComponentDeleteFailed, TaskManager.__ebStartupFailed,
	  TaskManager.__ebPauseFailed, TaskManager.__ebTaskStopFailed):
	* flumotion/transcoder/admin/transcoding.py
	  (Transcoding.__cbStartResumeTranscoding,
	  Transcoding.__ebStartupResumingFailure,
	  Transcoding.__ebAddComponentFailed,
	  Transcoding.__ebRemoveComponentFailed):
	* flumotion/transcoder/admin/transtask.py
	  (TranscodingTask.__ebAcknowledgeFailed):
	* flumotion/transcoder/log.py (setNotifier, setDefaultCategory,
	  Loggable, Loggable.logFailure, LoggerProxy.logFailure, log, debug,
	  info, warning, error):
	* flumotion/transcoder/utils.py (logFailures):
	Centralized failure logging to be able to send notifications.

2007-07-16  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/Makefile.am:
	* flumotion/transcoder/admin/notifier.py (notifyEmergency, notifyDebug,
	  INotifierListener, NotifierListener, Notifier, Notifier.__init__,
	  Notifier.addNotifications):
	Added notification module skeleton.

2007-07-16  Sebastien Merle  <sebastien@fluendo.com>

	* TODO:
	There is more to do.

2007-07-16  Sebastien Merle  <sebastien@fluendo.com>

	* conf/transcoder-admin.ini:
	* flumotion/transcoder/admin/adminconfig.py (NotifierConfig,
	  AdminConfig):
	Added notifier configuration.

2007-07-16  Sebastien Merle  <sebastien@fluendo.com>

	* conf/transcoder-data.ini:
	* flumotion/transcoder/admin/datasource/dataprops.py (TargetData,
	  ProfileData):
	* flumotion/transcoder/admin/datasource/filesource.py
	  (FileDataSource.retrieveProfileNotifications,
	  FileDataSource.retrieveTargetNotifications):
	Made the notifications lists to be able to specify more than one.

2007-07-16  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/Makefile.am:
	* flumotion/transcoder/admin/datastore/Makefile.am:
	Added new files to the makefiles.
	
2007-07-16  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/admin.py (TranscoderAdmin.__init__):
	* flumotion/transcoder/admin/admintask.py:
	* flumotion/transcoder/admin/datasource/dataprops.py:
	* flumotion/transcoder/admin/datasource/filesource.py:
	* flumotion/transcoder/admin/datastore/activitystore.py:
	* flumotion/transcoder/admin/datastore/adminstore.py:
	* flumotion/transcoder/admin/datastore/basestore.py (BaseStore,
	  BaseStore.__init__):
	* flumotion/transcoder/admin/datastore/notificationstore.py:
	* flumotion/transcoder/admin/enums.py:
	* flumotion/transcoder/admin/proxies/atmosphereproxy.py:
	* flumotion/transcoder/admin/proxies/componentproxy.py:
	* flumotion/transcoder/admin/proxies/flowproxy.py:
	* flumotion/transcoder/admin/scheduler.py (Scheduler.__init__):
	* flumotion/transcoder/admin/taskmanager.py:
	* flumotion/transcoder/enums.py:
	Moved all admin-specific enumerations to f.t.admin.enums

2007-07-16  Sebastien Merle  <sebastien@fluendo.com>
	
	* flumotion/transcoder/utils.py (deepCopy):
	Added a safe deep copy function that doesn't mess with enums.

2007-07-16  Sebastien Merle  <sebastien@fluendo.com>
	
	* flumotion/transcoder/enums.py:
	Added notification-related enumerations.

2007-07-16  Sebastien Merle  <sebastien@fluendo.com>
	
	* flumotion/transcoder/admin/scheduler.py (Scheduler.__init__,
	  Scheduler.initialize, Scheduler.__cbRestoreTasks,
	  Scheduler.__startTranscodingTask):
	Use the ActivityStore.
	Removed some debug print.

2007-07-16  Sebastien Merle  <sebastien@fluendo.com>
	
	* flumotion/transcoder/admin/proxies/componentproxy.py
	  (BaseComponentProxy._getAvatarId):
	Use self.getParent() insteed of self._parent

2007-07-16  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/datastore/configstore.py
	  (ThumbnailsConfig.getFormat, TargetConfigFactory):
	Some refactoring.

2007-07-16  Sebastien Merle  <sebastien@fluendo.com>
	
	* flumotion/transcoder/admin/admin.py (TranscoderAdmin.__init__):	
	* flumotion/transcoder/admin/datastore/activitystore.py (ActivityStore,
	  ActivityStore.__init__, ActivityStore.getLabel,
	  ActivityStore.getTranscodings, ActivityStore.getNotifications,
	  ActivityStore.newTranscoding, ActivityStore.newNotification,
	  ActivityStore._storeActivity, ActivityStore._resetActivity,
	  ActivityStore._deleteActivity, ActivityStore.__getActivities,
	  ActivityStore.__newActivity, ActivityStore.__cbWrapActivities,
	  BaseActivity.store, BaseActivity.reset, BaseActivity.delete,
	  BaseActivity._getAdminStore, BaseActivity._getData,
	  BaseActivity.__ebActivityStoreFailed,
	  BaseActivity.__ebActivityResetFailed,
	  BaseActivity.__ebActivityDeleteFailed,
	  TranscodingActivity.getCustomer, TranscodingActivity.getProfile,
	  TranscodingActivity._setProfile,
	  TranscodingActivity._setInputRelPath, NotificationActivity,
	  NotificationActivity.__init__, NotificationActivity.getRequestURL,
	  NotificationActivity.getRetryCount, NotificationActivity.getRetryMax,
	  NotificationActivity.getRetryNextTime,
	  NotificationActivity.setRetryCount, NotificationActivity.setRetryMax,
	  NotificationActivity.setRetryNextTime,
	  NotificationActivity._setRequestURL,
	  NotificationActivity._setNotification, ActivityFactory):
	Some refactoring.
	The store is now responsible of store and delete operation,
	so the delete and store method do not return deferred, and 
	the success of the operation is assumed. If something append
	to fail during these operation it will be the store that
	would be responsible to resolve the problem (retry?)

2007-07-16  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/datasource/dataprops.py (TargetData,
	  ProfileData, AdminData, TranscodingActivityData,
	  NotificationActivityData, ActivitiesData):
	* flumotion/transcoder/admin/datasource/datasource.py
	  (IDataSource.waitReady, IDataSource.retrieveGlobalNotifications,
	  IDataSource.retrieveCustomerNotifications,
	  IDataSource.retrieveProfileNotifications,
	  IDataSource.retrieveTargetNotifications,
	  IDataSource.retrieveActivities):
	* flumotion/transcoder/admin/datasource/filesource.py
	  (ImmutableWrapper, ImmutableWrapper.__init__,
	  ImmutableWrapper.__getattr__, ImmutableWrapper.__setattr__,
	  ImmutableDataWrapper, ImmutableDataWrapper.__setattr__,
	  ImmutableDataWrapper._getData, MutableDataWrapper,
	  MutableDataWrapper._store, MutableDataWrapper._delete,
	  MutableDataWrapper.__setattr__, _createReqNotif, _createMailNotif,
	  FileDataSource.waitReady, FileDataSource.retrieveDefaults,
	  FileDataSource.retrieveCustomers,
	  FileDataSource.retrieveCustomerInfo, FileDataSource.retrieveProfiles,
	  FileDataSource.retrieveGlobalNotifications,
	  FileDataSource.retrieveCustomerNotifications,
	  FileDataSource.retrieveProfileNotifications,
	  FileDataSource.retrieveTargetNotifications,
	  FileDataSource.retrieveTargets, FileDataSource.retrieveTargetConfig,
	  FileDataSource.retrieveActivities, FileDataSource.newActivity,
	  FileDataSource.store, FileDataSource.reset, FileDataSource.delete):
	Added a timeout to the waitReady method.
	Separated retrievals of global, customers, profiles 
	and targets notifications.

2007-07-16  Sebastien Merle  <sebastien@fluendo.com>
	
	* flumotion/transcoder/admin/adminconsts.py:
	* flumotion/transcoder/admin/datastore/notificationstore.py
	  (BaseNotification, BaseNotification.__init__,
	  BaseNotification.getIdentifier, BaseNotification.getCustomer,
	  BaseNotification.getProfile, BaseNotification.getTarget,
	  BaseNotification.getType, BaseNotification.getTriggers,
	  EMailNotification, EMailNotification.__init__,
	  EMailNotification.getSubjectTemplate,
	  EMailNotification.getBodyTemplate, EMailNotification.getAttachments,
	  EMailNotification.getAddresses, GETRequestNotification,
	  GETRequestNotification.__init__,
	  GETRequestNotification.getRequestTemplate,
	  GETRequestNotification.getRetryTimeout,
	  GETRequestNotification.getRetryCount,
	  GETRequestNotification.getRetrySleep, NotificationFactory):
	* flumotion/transcoder/admin/datastore/adminstore.py
	  (AdminStore.__init__, AdminStore.getActivityStore,
	  AdminStore._doGetChildElements, AdminStore._doSyncListener,
	  AdminStore._doPrepareInit, AdminStore._doRetrieveNotifications,
	  AdminStore._doWrapNotification, AdminStore.__cbRetrieveDefaults,
	  AdminStore.__cbRetrieveCustomers):
	* flumotion/transcoder/admin/datastore/basestore.py
	  (BaseStore.__init__, BaseStore.getNotifications,
	  BaseStore.iterNotifications, BaseStore._doRetrieveNotifications,
	  BaseStore._doWrapNotification, BaseStore._retrievalFailed,
	  BaseStore._doPrepareInit, BaseStore.waitDatasource,
	  BaseStore._doPrepareActivation, BaseStore.__cbRetrieveNotifications,
	  BaseStore.__cbWrapNotifications, BaseStore.__cbNotificationsReceived,
	  BaseStore.__ebDataSourceError):
	* flumotion/transcoder/admin/datastore/customerstore.py
	  (CustomerStore.getAdmin, CustomerStore._doSyncListener,
	  CustomerStore._doPrepareInit, CustomerStore._onActivated,
	  CustomerStore._onAborted, CustomerStore._doRetrieveNotifications,
	  CustomerStore._doWrapNotification, CustomerStore.__cbRetrieveInfo,
	  CustomerStore.__cbRetrieveProfiles,
	  CustomerStore.__cbProfileInitialized,
	  CustomerStore.__ebProfileInitFailed):
	* flumotion/transcoder/admin/datastore/profilestore.py
	  (ProfileStore.getAdmin, ProfileStore.getCustomer,
	  ProfileStore._doSyncListener, ProfileStore._doPrepareInit,
	  ProfileStore._onActivated, ProfileStore._onAborted,
	  ProfileStore._doRetrieveNotifications,
	  ProfileStore._doWrapNotification, ProfileStore.__cbRetrieveTargets,
	  ProfileStore.__cbTargetInitialized):
	* flumotion/transcoder/admin/datastore/targetstore.py
	  (TargetStore.getAdmin, TargetStore.getCustomer,
	  TargetStore.getProfile, TargetStore._doPrepareInit,
	  TargetStore._onActivated, TargetStore._onAborted,
	  TargetStore._doRetrieveNotifications,
	  TargetStore._doWrapNotification, TargetStore.__cbRetrieveConfig,
	  TargetStore.__cbConfigReceived):
	Added the notifications to the AdminStore (global notifications),
	CustomerStore, ProfileStore and TargetStore.
	Use a timeout when waiting for the datasource to be ready.
	Properly call the BaseStore method when overriding.

2007-07-16  Sebastien Merle  <sebastien@fluendo.com>

	* conf/transcoder-data.ini:
	Added the notifications entry.

2007-07-16  Sebastien Merle  <sebastien@fluendo.com>

	* AUTHORS:
	* HACKING:
	* README:
	* TODO:
	Updated the root information files.

2007-07-12  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/datastore/Makefile.am:
	* flumotion/transcoder/admin/datastore/activitystore.py (BaseActivity,
	  BaseActivity.__init__, BaseActivity.store, BaseActivity.reset,
	  BaseActivity.delete, BaseActivity.getLabel, BaseActivity.getType,
	  BaseActivity.getState, BaseActivity.setState,
	  BaseActivity.getStartTime, BaseActivity.getLastTime,
	  BaseActivity._touche, BaseActivity._getData, TranscodingActivity,
	  TranscodingActivity.__init__, TranscodingActivity.getInputRelPath,
	  TranscodingActivity.setInputRelPath, TranscodingActivity.getCustomer,
	  TranscodingActivity.getProfile, TranscodingActivity.setProfile,
	  Activity):
	Added the simple activity data wrapper file.

2007-07-12  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/inifile.py (IniFile.saveToFile):
	Added a HEADER class variable that will be saved in the 
	generated file as a comment

2007-07-12  Sebastien Merle  <sebastien@fluendo.com>
	
	* flumotion/transcoder/properties.py (ChildList.checkItem):
	Corrected a bug in ChildList and ChildDict, changed the
	error message to be more descriptive.

2007-07-12  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/taskmanager.py
	  (TaskManager.__cbAddComponent):
	Changed logging of a component addition without 
	corresponding task from warning to debug.

2007-07-12  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/scheduler.py (Scheduler.__init__,
	  Scheduler.initialize, Scheduler.onTranscodingFailed,
	  Scheduler.onTranscodingDone, Scheduler.onTranscodingTerminated,
	  Scheduler.__cbRestoreTasks, Scheduler.__ebInitializationFailed,
	  Scheduler.__asyncStartTask, Scheduler.__startTranscodingTask,
	  Scheduler.__clearQueue, Scheduler.__ebActivityStoreFailed,
	  Scheduler.__ebActivityDeleteFailed):
	Now retrieve the transcoding activities during initialisation,
	and create transcoding tasks to be able to resume transcoding job.

2007-07-12  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/montask.py (MonitoringTask.setFileState):
	Corrected a bug where an errback argument was missing.

2007-07-12  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/datastore/customerstore.py
	  (CustomerStore.getProfile):
	Added a getter to retrieve a profile by name with default value.

2007-07-12  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/datastore/basestore.py
	  (BaseStore._doPrepareActivation):
    Removed artificial delay to test asynchronous initialization.

2007-07-12  Sebastien Merle  <sebastien@fluendo.com>

	* conf/transcoder-admin.ini:
	* flumotion/transcoder/admin/adminconfig.py (DataSourceConfig,
	  AdminConfig, ClusterConfig):
	* flumotion/transcoder/admin/admin.py (TranscoderAdmin.__init__):
	* flumotion/transcoder/admin/adminconsts.py:
	* flumotion/transcoder/admin/context/admincontext.py
	  (AdminContext.getDataSource):
	* flumotion/transcoder/admin/context/profilecontext.py
	  (ProfileContext.getTranscoderLabel, ProfileContext.getActivityLabel):
	Changes needed by the datasource activities.

2007-07-12  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/datastore/adminstore.py
	  (AdminStore.getCustomer, AdminStore.__iter__,
	  AdminStore.iterCustomers, AdminStore.getActivities,
	  AdminStore.newActivity, AdminStore._storeActivity,
	  AdminStore._resetActivity, AdminStore._deleteActivity,
	  AdminStore.__ebRetrievalFailed, AdminStore.__cbWrapActivities):
	Very simple wrapper of the datasource activities.

2007-07-12  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/datasource/dataprops.py (AdminData,
	  ActivityData, TranscodingActivityData, ActivitiesData):
	* flumotion/transcoder/admin/datasource/filesource.py (DataWrapper,
	  DataWrapper.__init__, DataWrapper.__getattr__,
	  DataWrapper.__setattr__, DataWrapper._getData, MutableWrapper,
	  MutableWrapper.__init__, MutableWrapper._reset,
	  MutableWrapper._store, MutableWrapper._delete, MutableWrapper._clone,
	  MutableWrapper.__getattr__, MutableWrapper.__setattr__,
	  FileDataSource, FileDataSource.__init__, FileDataSource.initialize,
	  FileDataSource.waitReady, FileDataSource.retrieveDefaults,
	  FileDataSource.retrieveCustomers,
	  FileDataSource.retrieveCustomerInfo, FileDataSource.retrieveProfiles,
	  FileDataSource.retrieveTargets, FileDataSource.retrieveTargetConfig,
	  FileDataSource.retrieveActivities, FileDataSource.newActivity,
	  FileDataSource.store, FileDataSource.reset, FileDataSource.delete,
	  FileDataSource.__loadAdminData, FileDataSource.__cbInitAdminData,
	  FileDataSource.__loadActivityData,
	  FileDataSource.__cbInitActivityData,
	  FileDataSource.__ebInitializationFailed,
	  FileDataSource.__storeActivities, FileDataSource.__cbActivitiesSaved,
	  FileDataSource.__ebActivitiesSaveFailed):
	Implemented the activity retrieval and storing.
	Due to the current limitations, the activities already terminated
	(state 'done' or 'failed') are not saved to file. If they was already
	saved the activities are removed from the file.
	Removed artificial delay to test asynchronous initialization.

2007-07-12  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/enums.py:
	* flumotion/transcoder/admin/datasource/datasource.py (IDataSource,
	  IDataSource.retrieveTargetConfig, IDataSource.retrieveActivities,
	  IDataSource.newActivity, IDataSource.reset, IDataSource.delete):
	Updated the datrasource interface to add activiy creation and retrieval.

2007-07-12  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/context/transcontext.py
	  (TranscodingContext.iterCustomerContexts,
	  TranscodingContext.getUnboundProfileContext,
	  TranscodingContext.getProfileContext):
	Added shortcut methods to retrieve a profile context directly.

2007-07-12  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/test/test_utils.py (TestUtils.testStripEscaped,
	  TestUtils.check, TestUtils.testSplitEscaped, TestUtils.check,
	  TestUtils.testSplitCommandFields, TestUtils.check,
	  TestUtils.testJoinCommandFields, TestUtils.check,
	  TestUtils.testJoinSplitCommandFields, TestUtils.check):
	* flumotion/transcoder/process.py (Process.__init__, Process.execute):
	* flumotion/transcoder/utils.py (splitEscaped, stripEscaped,
	  splitCommandFields, escapeField, joinCommandFields, deepCopy):
	Better command line splitting and joining, more tests

2007-07-09  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/proxies/componentproxy.py
	  (BaseComponentProxy.__init__):
	* flumotion/transcoder/admin/proxies/managerproxy.py
	  (ManagerProxy.__init__, ManagerProxy.__workerStateRemoved,
	  ManagerProxy.__flowStateRemoved):
	* flumotion/transcoder/admin/proxies/managerset.py
	  (ManagerSet.__init__):
	Added waiters decription.

2007-07-09  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/proxies/groupproxy.py
	  (ComponentGroupProxy.__componentStateRemoved):
	Properly update the child target when a state is removed.

2007-07-09  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/admin.py (TranscoderAdmin.__init__,
	  TranscoderAdmin.__startup, TranscoderAdmin.__resume,
	  TranscoderAdmin.__pause, TranscoderAdmin.__abort):
	Added a shudown handler to set the admin state to terminated.
	Only add callback when starting and resuming the admin,
	if one fail the next ones should not be executed.
	Still use addBoth for idle waiting because if one timeout,
	we still want to wait the others.

2007-07-09  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/adminelement.py (AdminElement.__init__,
	  AdminElement._incIdlTarget, AdminElement._childElementActivated,
	  AdminElement._childElementRemoved, AdminElement._removed):
	Added waiters description.
	Properly decrement the idle counter when a child element is removed.

2007-07-09  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/admintask.py (AdminTask.__init__,
	  AdminTask.getActiveComponent, AdminTask.pause, AdminTask.resume,
	  AdminTask.suggestWorker, AdminTask.waitActive, AdminTask._onStarted,
	  AdminTask._terminate, AdminTask.__setActiveComponent,
	  AdminTask.__cbStartupSucceed, AdminTask.__waitPotentialComponent):
	Some renaming.
	Added description to waiters.
	Clean the worker reference when paused.
	Allow the terminated tasks to be paused and resume silently.

2007-07-09  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/monitoring.py (Monitoring._doStart,
	  Monitoring._doResume, Monitoring._doPause,
	  Monitoring.__cbStartResumeMonitoring, Monitoring.__cbAddBalancedTask,
	  Monitoring.__ebStartupResumingFailure):
	Renamed some methods.
	Properly remove the tasks from the balancer when paused.

2007-07-09  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/montask.py
	  (MonitoringTask._onComponentStartupCanceled,
	  MonitoringTask._onStarted, MonitoringTask._doAcceptSuggestedWorker,
	  MonitoringTask.__asyncMovePendingFiles,
	  MonitoringTask.__cbFileMoved):
	Update the components mood after startup.
	The monitor wasn't passed as callback argument when moving files.

2007-07-09  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/transcoding.py (Transcoding._doStart,
	  Transcoding._doResume, Transcoding._doPause,
	  Transcoding.__cbStartResumeTranscoding,
	  Transcoding.__cbAddBalancedTask,
	  Transcoding.__ebStartupResumingFailure):
	Renamed some methods.
	Properly remove the tasks from the balancer when paused.

2007-07-09  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/scheduler.py (Scheduler.__init__,
	  Scheduler.isStarted, Scheduler.pause, Scheduler.addProfile,
	  Scheduler.onSlotsAvailable, Scheduler.__startup,
	  Scheduler.__startupTasks, Scheduler.__cancelTasksStartup,
	  Scheduler.__asyncStartTask, Scheduler.__popNextProfile,
	  Scheduler.__clearQueue):
	Start the tasks one by one and asynchronously.

2007-07-09  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/taskmanager.py (TaskManager.__init__,
	  TaskManager._tryStartup, TaskManager.__cbStartupSucceed,
	  TaskManager.__cbPauseSucceed, TaskManager.__waitIdle,
	  TaskManager.__cbWaitActive):
	Added description to the waiters.
	Properly call _doResume when resuming.
	Update components moods after startup.
	Use list comprehension to build deferred lists.

2007-07-09  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/transtask.py (TranscodingTask._onStarted):
	Update the components mood after startup and not during startup.

2007-07-09  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/proxies/transcoderproxy.py
	  (TranscoderProxy.loadTo):
	Assert the atmosphere exists.

2007-07-09  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/transbalancer.py
	  (TranscoderBalancer.getAvailableSlots):
	Do not return negative slot availability.

2007-07-09  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/waiters.py (BaseWaiters.__init__,
	  BaseWaiters.__asyncWaitTimeout, PassiveWaiters,
	  PassiveWaiters.__init__, AssignWaiters.__init__,
	  CounterWaiters.__init__, CounterWaiters.isWaiting,
	  ValueWaiters.__init__, ValueWaiters.__asyncWaitTimeout,
	  ItemWaiters.__init__, ItemWaiters.__asyncWaitTimeout):
	Added a description to be able to easily track timeouts.

2007-07-06  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/admin.py (TranscoderAdmin.__startup,
	  TranscoderAdmin.__resume, TranscoderAdmin.__pause,
	  TranscoderAdmin.__cbAdminInitialized):
	* flumotion/transcoder/utils.py (bridgeResult, shiftResult,
	  logFailures, deferredPrint):
	Added a bridgeResult that call a given method but 
	keep and propagate the previous result.

2007-07-06  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/scheduler.py
	  (SchedulerListener.onTranscodingStarted,
	  SchedulerListener.onTranscodingFail,
	  SchedulerListener.onTranscodingDone, Scheduler.pause,
	  Scheduler.resume, Scheduler.addProfile, Scheduler.removeProfile,
	  Scheduler.isProfileQueued, Scheduler.isProfileActive,
	  Scheduler.waitIdle, Scheduler._doSyncListener):
	Standardized start/pause/resume methods.
	Added methods to know the state of a profile.

2007-07-06  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/adminelement.py
	  (AdminElement.__cbParentActivated, AdminElement.__ebParentAborted):
	Can call waitActive anytime.

2007-07-06  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/admin.py (TranscoderAdmin.__init__,
	  TranscoderAdmin.initialize, TranscoderAdmin.onDetached,
	  TranscoderAdmin.onAttached, TranscoderAdmin.onProfileAdded,
	  TranscoderAdmin.onProfileRemoved, TranscoderAdmin.onTargetAdded,
	  TranscoderAdmin.onTargetRemoved,
	  TranscoderAdmin.onMonitoredFileAdded,
	  TranscoderAdmin.onMonitoredFileStateChanged,
	  TranscoderAdmin.onMonitoredFileRemoved,
	  TranscoderAdmin.__fileStateChanged, TranscoderAdmin.changeState,
	  TranscoderAdmin.__startup, TranscoderAdmin.__resume,
	  TranscoderAdmin.__pause, TranscoderAdmin.__cbAdminInitialized,
	  TranscoderAdmin.__ebAdminInitializationFailed,
	  TranscoderAdmin.__cbSartupSucceed, TranscoderAdmin.__ebSartupFailed,
	  TranscoderAdmin.__cbResumingSucceed,
	  TranscoderAdmin.__ebResumingFailed,
	  TranscoderAdmin.__cbPausingSucceed,
	  TranscoderAdmin.__ebPausingFailed):
	Standardized start/resume/pause handling.
	Synchronize the monitors files state.
	More logging.

2007-07-06  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/waiters.py (BaseWaiters._wait,
	  PassiveWaiters.__init__, PassiveWaiters.reset,
	  PassiveWaiters.fireCallbacks, PassiveWaiters.fireErrbacks,
	  PassiveWaiters.wait, AssignWaiters.wait, AssignWaiters.setValue,
	  CounterWaiters.wait):
	Changed PassiveWiaters to remember it's callback state.

2007-07-06  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/filemonitor.py
	  (FileMonitor.setFileState):
	Corrected a bug where changing the state of a removed file
	make it staying foreaver in the UI State.

2007-07-06  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/adminconsts.py:
	* flumotion/transcoder/admin/admintask.py (IAdminTask.isStarted,
	  IAdminTask.start, IAdminTask.pause, IAdminTask.resume,
	  IAdminTask.stop, IAdminTask.waitPotentialWorker, IAdminTask.waitIdle,
	  IAdminTask.waitActive, AdminTask.__init__, AdminTask.isStarted,
	  AdminTask.hasTerminated, AdminTask.getActiveComponent,
	  AdminTask.removeComponent, AdminTask.start, AdminTask.pause,
	  AdminTask.resume, AdminTask.stop, AdminTask.abort,
	  AdminTask.waitIdle, AdminTask.waitPotentialWorker,
	  AdminTask.waitActive, AdminTask._doChainWaitIdle,
	  AdminTask._doChainWaitPotentialComponent, AdminTask._doStartup,
	  AdminTask._terminate, AdminTask._isElectedComponent,
	  AdminTask._hasElectedComponent, AdminTask._cancelComponentHold,
	  AdminTask.__setActiveComponent, AdminTask.__startup,
	  AdminTask.__stateChangedError, AdminTask.__cbStartupSucceed,
	  AdminTask.__ebStartupFailed, AdminTask.__relieveComponent,
	  AdminTask.__electComponent, AdminTask.__startComponent,
	  AdminTask.__cbGotPotentialComponent, AdminTask.__asyncHoldTimeout):
	* flumotion/transcoder/admin/monitoring.py (Monitoring._doStart,
	  Monitoring._doResume, Monitoring._onTaskAdded,
	  Monitoring._onTaskRemoved, Monitoring.__cbMonitorSetGoesIdle,
	  Monitoring.__cbRetrievePotentialWorker,
	  Monitoring.__ebStartingFailure):
	* flumotion/transcoder/admin/montask.py
	  (IMonitoringTaskListener.onMonitoredFileAdded,
	  IMonitoringTaskListener.onMonitoredFileStateChanged,
	  IMonitoringTaskListener.onMonitoredFileRemoved,
	  MonitoringTaskListener.onMonitoredFileAdded,
	  MonitoringTaskListener.onMonitoredFileStateChanged,
	  MonitoringTask.onComponentMoodChanged,
	  MonitoringTask.onMonitorFileRemoved,
	  MonitoringTask.onMonitorFileAdded,
	  MonitoringTask.onMonitorFileChanged,
	  MonitoringTask._doSelectPotentialComponent):
	* flumotion/transcoder/admin/taskmanager.py (TaskManager.__init__,
	  TaskManager.addTask, TaskManager.removeTask, TaskManager.isStarted,
	  TaskManager.isPaused, TaskManager.start, TaskManager.pause,
	  TaskManager.resume, TaskManager.abort, TaskManager.addComponent,
	  TaskManager.removeComponent, TaskManager.waitIdle,
	  TaskManager.waitActive, TaskManager._doChainWaitIdle,
	  TaskManager._doChainWaitActive, TaskManager.onComponentMoodChanged,
	  TaskManager._tryStartup, TaskManager.__pauseTaskManager,
	  TaskManager.__cbStartup, TaskManager.__cbCallForAllTasks,
	  TaskManager.__ebResolveCallFailure, TaskManager.__cbAddComponent,
	  TaskManager.__ebGetPropertiesFailed,
	  TaskManager.__ebComponentStopFailed,
	  TaskManager.__ebComponentDeleteFailed,
	  TaskManager.__stateChangedError, TaskManager.__cbStartupSucceed,
	  TaskManager.__ebStartupFailed, TaskManager.__cbPauseSucceed,
	  TaskManager.__ebPauseFailed, TaskManager.__waitIdle,
	  TaskManager.__cbWaitActive, TaskManager.__cbAppartStopResults,
	  TaskManager.__ebTaskStopFailed):
	* flumotion/transcoder/admin/transcoding.py (Transcoding._doStart,
	  Transcoding._doResume, Transcoding._onTaskAdded,
	  Transcoding._onTaskRemoved, Transcoding._doSyncListener,
	  Transcoding.__cbTranscoderSetGoesIdle,
	  Transcoding.__cbRetrievePotentialWorker):
	* flumotion/transcoder/admin/transtask.py
	  (TranscodingTask.isAcknowledged, TranscodingTask.onComponentOrphaned,
	  TranscodingTask.onComponentMoodChanged,
	  TranscodingTask.onTranscoderStatusChanged,
	  TranscodingTask.onTranscoderJobStateChanged):
	* flumotion/transcoder/enums.py:
	Cleaned and standardized the task managment classes.

2007-07-05  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/adminelement.py
	  (AdminElement.__cbLogFailures):
	* flumotion/transcoder/admin/admintask.py
	  (AdminTask.__cbMultiDeleteResults, AdminTask.__bbTaskTerminated,
	  AdminTask.__bbSelectPotentialComponent,
	  AdminTask.__ebPotentialComponentFailure,
	  AdminTask.__ebComponentLoadFailed, AdminTask.__ebComponentNotHappy,
	  AdminTask.__ebUIStateFailed, AdminTask.__ebComponentStopFailed,
	  AdminTask.__ebComponentDeleteFailed, AdminTask.__ebNoValidWorker):
	* flumotion/transcoder/admin/monitoring.py
	  (Monitoring.__cbMonitorSetGoesIdle, Monitoring.__ebStartingFailure,
	  Monitoring.__ebAddComponentFailed,
	  Monitoring.__ebRemoveComponentFailed):
	* flumotion/transcoder/admin/proxies/componentset.py
	  (ComponentSetSkeleton.__ebAcceptFailure):
	* flumotion/transcoder/admin/taskmanager.py (TaskManager.getTask,
	  TaskManager.__ebGetPropertiesFailed, TaskManager.__ebStopFailed,
	  TaskManager.__ebDeleteFailed, TaskManager.__ebStartupFailed,
	  TaskManager.__ebResumeFailed, TaskManager.__ebPauseFailed):
	* flumotion/transcoder/admin/transcoding.py
	  (Transcoding.__cbTranscoderSetGoesIdle,
	  Transcoding.__ebStartingFailure, Transcoding.__ebAddComponentFailed,
	  Transcoding.__ebRemoveComponentFailed):
	Changed traceback logging to include a description of the tb origine.

2007-07-05  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/admin.py (TranscoderAdmin,
	  TranscoderAdmin.__init__, TranscoderAdmin.initialize,
	  TranscoderAdmin.onAttached, TranscoderAdmin.onTargetRemoved,
	  TranscoderAdmin.onMonitoringTaskAdded,
	  TranscoderAdmin.onMonitoringTaskRemoved,
	  TranscoderAdmin.onMonitoringActivated,
	  TranscoderAdmin.onMonitoredFileAdded,
	  TranscoderAdmin.onMonitoredFileRemoved,
	  TranscoderAdmin.onProfileQueued,
	  TranscoderAdmin.onTranscodingStarted,
	  TranscoderAdmin.onTranscodingFail, TranscoderAdmin.onTranscodingDone,
	  TranscoderAdmin.__moveFailedInputFiles,
	  TranscoderAdmin.__setInputFileState,
	  TranscoderAdmin.__ebSartupFailed):
	Listen monitoring task events and add the profiles to the scheduler.
	Listen scheduler events and update monitor files state.	

2007-07-05  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/montask.py (MonitoringTask.__init__,
	  MonitoringTask.setFileState, MonitoringTask.moveFiles,
	  MonitoringTask.onMonitorFileAdded,
	  MonitoringTask._onComponentElected, MonitoringTask.__file2profile,
	  MonitoringTask.__asyncMovePendingFiles,
	  MonitoringTask.__ebSetFileStateFailed, MonitoringTask.__cbFileMoved,
	  MonitoringTask.__ebMoveFilesFailed):
	Add the methods setFileState and moveFiles.
	Keep a buffer of the files to be moved, and wait for a 
	valid monitor to be connected to ask it to move the files.

2007-07-05  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/transtask.py
	  (TranscodingTask.isAcknowledged,
	  TranscodingTask.__ebAcknowledgeFailed):
	Added the method isAcknowledged.

2007-07-05  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/adminconsts.py:
	* flumotion/transcoder/admin/proxies/monitorproxy.py
	  (MonitorProxy.setFileState, MonitorProxy.moveFiles,
	  MonitorProxy._doBroadcastUIState, MonitorProxy._onMonitorSetFile):
	Properly sync UI state listeners.
	Added moveFiles and setFileState methods.	

2007-07-05  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/scheduler.py (ISchedulerListener,
	  ISchedulerListener.onProfileQueued,
	  ISchedulerListener.onTranscodingStarted,
	  ISchedulerListener.onTranscodingFail,
	  ISchedulerListener.onTranscodingDone, SchedulerListener,
	  SchedulerListener.onProfileQueued,
	  SchedulerListener.onTranscodingStarted,
	  SchedulerListener.onTranscodingFail,
	  SchedulerListener.onTranscodingDone, Scheduler, Scheduler.__init__,
	  Scheduler.initialize, Scheduler.addProfile, Scheduler.removeProfile,
	  Scheduler.onTranscodingFailed, Scheduler.onTranscodingDone,
	  Scheduler.onTranscodingTerminated, Scheduler._doSyncListener,
	  Scheduler.__startupTasks):
	Now the sheduler do not depend on monitoring.
	Added scheduling state events.

2007-07-05  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/enums.py:
	Added the monitor file states failed and done.

2007-07-05  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/job.py (TranscoderJob._setJobState):
	Now wait the current call chain to finish before changing the job state.

2007-07-05  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/filetranscoder.py
	  (FileTranscoder.transcoder_checks, FileTranscoder.transcoder_setup,
	  FileTranscoder.transcoder_start, FileTranscoder.do_stop,
	  FileTranscoder.component_stop, FileTranscoder.__transcodingError,
	  FileTranscoder.__unexpectedError):
	  Added global exception catching and logging during check/setup/startup.

2007-07-05  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/filemonitor.py
	  (FileMonitorMedium.remote_moveFiles, FileMonitor.moveFiles,
	  FileMonitor.monitor_checks, FileMonitor.monitor_setup,
	  FileMonitor.monitor_startup):
	Changed the remote method move File to moveFiles, now it can move
	more than one file at the same time.
	Added global exception catching and logging during check/setup/startup.

2007-07-04  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/filemonitor.py
	  (FileMonitorMedium.remote_setFileState,
	  FileMonitorMedium.remote_moveFile, FileMonitor, FileMonitor.moveFile,
	  FileMonitor.monitor_startup, FileMonitor.setFileState):
	Added a remote method that allow moving files, but only
	if thery are from a monitored directory.

2007-07-04  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/filetranscoder.py:
	* flumotion/component/transcoder/job.py:
	Import cleanup.

2007-07-04  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/filemonitor.py
	  (FileMonitorMedium.remote_setFileState):
	Removed test remote method.

2007-07-04  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/filemonitor.py
	  (FileMonitorMedium.remote_setFileState,
	  FileMonitorMedium.remote_test, FileMonitor.init,
	  FileMonitor.do_check, FileMonitor.monitor_checks,
	  FileMonitor.do_setup, FileMonitor.monitor_setup,
	  FileMonitor.monitor_startup, FileMonitor.setFileState,
	  FileMonitor._file_added, FileMonitor._file_completed,
	  FileMonitor._file_removed, FileMonitor.__unexpectedError):
	* flumotion/component/transcoder/filemonitor.xml:
	* flumotion/component/transcoder/filemonitor_admin_gtk.py
	  (FileMonitorAdminGtkNode._addDirectory):
	* flumotion/component/transcoder/filetranscoder.py
	  (FileTranscoder.__unexpectedError):
	* flumotion/transcoder/admin/monprops.py
	  (MonitorProperties.createFromComponentDict,
	  MonitorProperties.asComponentProperties):
	* flumotion/transcoder/admin/proxies/monitorproxy.py
	  (MonitorProxy._doBroadcastUIState, MonitorProxy._onUIStateSetitem,
	  MonitorProxy._onUIStateDelitem, MonitorProxy._onMonitorSetFile,
	  MonitorProxy._onMonitorDelFile):
	Made the file FileMonitor component use VirtualPath and Local.

2007-07-04  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/virtualpath.py (VirtualPath.jellyFor,
	  VirtualPath.unjellyFor):
	Made the jellyer/unjellyer actually work.

2007-07-03  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/virtualpath.py (VirtualPath):
	It's better if VirtualPath inherite from Jellyable and Unjellyable.

2007-07-03  Sebastien Merle  <sebastien@fluendo.com>

	* conf/planet.xml:
	* configure.ac:
	* flumotion/transcoder/manager/Makefile.am:
	* flumotion/transcoder/manager/__init__.py:
	* flumotion/transcoder/manager/plugs.py (TranscoderEnvironment):
	* flumotion/transcoder/manager/plugs.xml:
	Created a manager plug to setup the transcoder-specific environment.
	It allow the import of transcoder modules that setup jellyer,
	this way the manager can properly forward transcoder-specific types.

2007-07-03  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/filetranscoder.py
	  (FileTranscoderMedium.remote_getReportPath,
	  FileTranscoder._fireTranscodingReport):
	Made the file transcoder component directly return
	VirtualPath without converting it to string.

2007-07-03  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/virtualpath.py (VirtualPath.append,
	  VirtualPath.getStateFor, VirtualPath.setStateFor):
	Made the VirtualPath class jellyable and unjellyable.

2007-07-03  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/transtask.py
	  (TranscodingTask.onComponentOrphaned):
	Properly abort a task if it's already sad when going orphaned.

2007-07-03  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/scheduler.py (Scheduler,
	  Scheduler.__init__, Scheduler.onMonitoredFileAdded,
	  Scheduler.onMonitoredFileRemoved, Scheduler.onSlotsAvailable,
	  Scheduler.onTranscodingTerminated, Scheduler.__startup,
	  Scheduler.__startupTasksIfPossible, Scheduler.__startupTasks,
	  Scheduler.__isProfileQueued, Scheduler.__getProfilePriority,
	  Scheduler.__getKeyPriority, Scheduler.__queueProfile,
	  Scheduler.__unqueuProfile, Scheduler.__popNextProfile):
	Implemented a basic priority scheduling, the same way
	the old transcoder was doing it.
	task_priority = customer_priority * 1000 + profile_priority

2007-07-03  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/adminconsts.py:
	* flumotion/transcoder/admin/datasource/dataprops.py (CustomerData,
	  AdminData):
	* flumotion/transcoder/admin/datasource/datasource.py
	  (IDataSource.retrieveDefaults, IDataSource.retrieveCustomers):
	* flumotion/transcoder/admin/datastore/adminstore.py (AdminStore):
	* flumotion/transcoder/admin/datastore/customerstore.py
	  (CustomerStore):
	* flumotion/transcoder/admin/datastore/profilestore.py (ProfileStore):
	* flumotion/transcoder/admin/datastore/targetstore.py (TargetStore):
	Added a customer priority property with default value of 100.
	Set the default value of transcoding priority to 100 too.
	
2007-07-03  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/datasource/Makefile.am:
	* flumotion/transcoder/admin/datasource/dummysource.py:
	Deleted old and deprectated dummy data source.

2007-07-03  Sebastien Merle  <sebastien@fluendo.com>

	* conf/transcoder-admin.ini:
	* conf/transcoder-data.ini:
	Setup 2 jobs for the workers on streamer1 and stremaer2.
	Force audio-rate in all profiles.

2007-07-02  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/admin.py (TranscoderAdmin,
	  TranscoderAdmin.__init__, TranscoderAdmin.initialize,
	  TranscoderAdmin.onDetached, TranscoderAdmin.onAttached,
	  TranscoderAdmin.onCustomerAdded, TranscoderAdmin.onCustomerRemoved,
	  TranscoderAdmin.__startup, TranscoderAdmin.__cbAdminInitialized):
	* flumotion/transcoder/admin/adminconsts.py:
	Use the new scheduler class.
	Added a delay when resuming to let time to the workers 
	to log back	in the manager.

2007-07-02  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/Makefile.am:
	* flumotion/transcoder/admin/scheduler.py (ISchedulerListener,
	  SchedulerListener, Scheduler, Scheduler.__init__,
	  Scheduler.initialize, Scheduler.waitIdle, Scheduler.start,
	  Scheduler.pause, Scheduler.resume, Scheduler.onMonitoringTaskAdded,
	  Scheduler.onMonitoringTaskRemoved, Scheduler.onMonitoredFileAdded,
	  Scheduler.onMonitoredFileRemoved, Scheduler.onTranscodingTaskAdded,
	  Scheduler.onTranscodingTaskRemoved, Scheduler.onSlotsAvailable,
	  Scheduler.onTranscoderSelected, Scheduler.onTranscoderReleased,
	  Scheduler.onTranscodingFailed, Scheduler.onTranscodingDone,
	  Scheduler.onTranscodingTerminated, Scheduler.__startup,
	  Scheduler.__addTaskIfSlotsAvailable, Scheduler.__addTasks):
	Added an empty scheduler implemenetation that only queue 
	the pending transcoding tasks and start them in order.

2007-07-02  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/transcoding.py
	  (ITranscodingListener.onTranscodingTaskRemoved,
	  ITranscodingListener.onSlotsAvailable,
	  TranscodingListener.onSlotsAvailable, Transcoding,
	  Transcoding.__init__, Transcoding.getAvailableSlots,
	  Transcoding.initialize, Transcoding._onTaskAdded,
	  Transcoding._onTaskRemoved, Transcoding.onTranscoderRemovedFromSet,
	  Transcoding.onSlotsAvailable, Transcoding._doSyncListener):
	Add listeners and synchronize them when initializing.
	Corrected some typo, forward task balancer events and publish 
	a method to retrieve the number of available transcoding slots.

2007-07-02  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/monitoring.py (Monitoring.__init__,
	  Monitoring.initialize, Monitoring._doSyncListener):
	Add listeners and synchronize them when initializing.

2007-07-02  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/transtask.py
	  (TranscodingTask.isAcknowledging):
	Added a method to know if a transcoding task is already acknowledging.

2007-07-02  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/taskmanager.py (TaskManager.getTask):
	Added a task getter by identifier.

2007-07-02  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/admintask.py
	  (AdminTask._waitDeleteComponent):
	* flumotion/transcoder/admin/datasource/filesource.py
	  (FileDataSource.initialize):
	* flumotion/transcoder/admin/transbalancer.py
	  (ITranscoderBalancerListener,
	  ITranscoderBalancerListener.onSlotsAvailable,
	  TranscoderBalancerListener,
	  TranscoderBalancerListener.onSlotsAvailable, TranscoderBalancer,
	  TranscoderBalancer.__init__, TranscoderBalancer.getAvailableSlots,
	  TranscoderBalancer.removeTask, TranscoderBalancer.balance):
	More logging, typo cleanup.

2007-07-02  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/filemonitor.py (FileMonitor.init,
	  FileMonitor.do_setup, FileMonitor.monitor_setup,
	  FileMonitor.do_start, FileMonitor.monitor_startup,
	  FileMonitor._file_removed, FileMonitor.__ebErrorFilter,
	  FileMonitor.__monitorError, FileMonitor.__unexpectedError):
	Refactorized for better setup/startup error handling.

2007-06-29  Sebastien Merle  <sebastien@fluendo.com>

	* conf/transcoder-data.ini:
	Force audio-rate. Some low samplerate input file
	make the high quality target fail because vorbisenc
	do not accept low samplerate with high bitrate.

2007-06-29  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/datasource/dataprops.py (AudioData):
	Changed wrong property type for audio-rate and audio-channels.

2007-06-29  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/filetranscoder.py
	  (FileTranscoder.__ebErrorFilter, FileTranscoder.__transcodingError,
	  FileTranscoder.__unexpectedError):
	Properly return failure when handling check and setup to prevent the
	transcoder to be started.

2007-06-29  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/transtask.py (TranscodingTask.__init__,
	  TranscodingTask.onComponentOrphaned,
	  TranscodingTask.onComponentMoodChanged,
	  TranscodingTask.onTranscoderStatusChanged,
	  TranscodingTask.onTranscoderJobStateChanged,
	  TranscodingTask._onComponentRelieved, TranscodingTask._doAborted,
	  TranscodingTask.__transcodingFailed,
	  TranscodingTask.__transcodingSucceed,
	  TranscodingTask.__cbJobTerminated,
	  TranscodingTask.__ebAcknowledgeFailed,
	  TranscodingTask.__asyncSadTimeout):
	Forgot to fail after retries exhaustion.
	Added a timeout for sad component, if the active component is sad
	for too much time without acknowledging and is not dead, a timeout
	is triggered to prevent zombie components.
	Now handle transcoder status error and unexpected_error.
	The error status make the transcoding fail, and the unexpected_error
	status make it abort and retry.
	If a transcoder goes sad and is not running anymore (killed or sigv),
	the task abort and retry.

2007-06-29  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/log.py (getExceptionTraceback,
	  getFailureTraceback):
	Integrated traceback cleaning int getXXXTraceback.

2007-06-29  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/inifile.py (IniFile.loadFromFile,
	  IniFile.saveToFile):
	* flumotion/transcoder/properties.py (RootPropertyBag):
	* flumotion/transcoder/transconfig.py (TranscodingConfig):
	* flumotion/transcoder/transreport.py (LocalReport.loadFromLocal,
	  LocalReport.getLocal, TranscodingReport):
	Added version specification. It's only saved in the files,
	there is no multi-version or version resolution managment yet.
	But can still be very usfull later fore reading old version 
	of the property files.

2007-06-29  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/adminconsts.py:
	Constant tweaking

2007-06-29  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/job.py (TranscoderJob.moveSource):
	Corrected copy/past bug.

2007-06-29  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/filetranscoder.py
	  (FileTranscoder.init, FileTranscoder.check_properties,
	  FileTranscoder.do_check, FileTranscoder.transcoder_checks,
	  FileTranscoder.do_setup, FileTranscoder.transcoder_setup,
	  FileTranscoder.do_start, FileTranscoder.transcoder_start,
	  FileTranscoder.do_stop, FileTranscoder.component_stop,
	  FileTranscoder._getReportPath, FileTranscoder._logCurrentException,
	  FileTranscoder.__ebErrorFilter, FileTranscoder.__ebStopErrorFilter,
	  FileTranscoder.__transcodingError, FileTranscoder.__unexpectedError,
	  FileTranscoder.__cbJobDone, FileTranscoder.__ebJobFailed,
	  FileTranscoder.__cbJobTerminated,
	  FileTranscoder.__ebAcknowledgeError, FileTranscoder.__writeReport,
	  FileTranscoder.__finalizeDiagnoseMode,
	  FileTranscoder.__ebDiagnoseAcknowledgeFail,
	  FileTranscoder.__finalizeStandardMode, FileTranscoder.__terminate,
	  FileTranscoder.__terminateDiagnoseMode,
	  FileTranscoder.__terminateStandardMode):
	* flumotion/component/transcoder/filetranscoder.xml:
	* flumotion/transcoder/enums.py:
	* flumotion/transcoder/errors.py (TranscoderConfigError,
	  TranscoderConfigError.__init__):
	* flumotion/transcoder/local.py (Local.updateFromComponentProperties):
	Refactorized for better check/setup/startup error handling.
	Added two transcoding status, error and unexpected_error; error for
	known error that the admin should considere as transcoding failure,
	and unexpected_error for... unexpected errors where the admin could
	choose to retry the transcoding task. The aborted status is removed
	in favor of unexpected_error.
	The file-transcoder component properties changed, 'report' is now used
	to force the output report file, and to specify a report to load from
	for diagnose purpose the propert 'diagnose' should be used.
	When diganosing, the local is first loaded from the report, and then
	updated with the component properties.
	In diagnose mode now print the outcome message and stop the reactor 
	after acknowledgment.

2007-06-28  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/transtask.py
	  (TranscodingTask.onComponentMoodChanged):
	Added the lost component holding call,
	and corrected a refactoring bug.

2007-06-28  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/job.py
	  (TranscoderJob.__cbDoAcknowledge, TranscoderJob.__cbMoveOutputFiles,
	  TranscoderJob.__bbMoveInputFile, TranscoderJob.moveSource):
	Do not propagate the transcoder failure to the acknowledge chain,
	only the transcoding outcome.  Otherwise failed transcoding cannot
	be acknowledged successfully.

2007-06-28  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/transtask.py (TranscodingTask,
	  TranscodingTask.__init__, TranscodingTask.getProfileContext,
	  TranscodingTask.onComponentMoodChanged,
	  TranscodingTask.onTranscoderJobStateChanged,
	  TranscodingTask._onComponentAdded,
	  TranscodingTask._onComponentRemoved,
	  TranscodingTask._onComponentHold,
	  TranscodingTask._onComponentHoldCanceled,
	  TranscodingTask._onComponentLost,
	  TranscodingTask._onComponentElected,
	  TranscodingTask._onComponentRelieved,
	  TranscodingTask._onComponentStartingUp,
	  TranscodingTask._onComponentStartupCanceled,
	  TranscodingTask._doChainWaitSynchronized,
	  TranscodingTask._doChainWaitPotentialComponent,
	  TranscodingTask._doStartup, TranscodingTask._doAcceptSuggestedWorker,
	  TranscodingTask._doChainTerminate, TranscodingTask._doTerminated,
	  TranscodingTask._doAborted,
	  TranscodingTask._doSelectPotentialComponent,
	  TranscodingTask._doLoadComponent, TranscodingTask.__cbJobTerminated,
	  TranscodingTask.__ebAcknowledgeFailed,
	  TranscodingTask.__cbCheckForAbortedTranscoder,
	  TranscodingTask.__ebFailToRetrieveStatus):
	Refactored to use the base class AdminTask.
	This automatically add retries limitation and lost component 
	holding to the transcoding tasks.

2007-06-28  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/montask.py (MonitoringTask,
	  MonitoringTask.onMonitorFileRemoved,
	  MonitoringTask.onMonitorFileChanged,
	  MonitoringTask._onComponentAdded, MonitoringTask._onComponentRemoved,
	  MonitoringTask._onComponentElected,
	  MonitoringTask._onComponentRelieved,
	  MonitoringTask._onComponentStartupCanceled,
	  MonitoringTask._doAcceptSuggestedWorker, MonitoringTask._doStartup,
	  MonitoringTask._doAborted,
	  MonitoringTask._doSelectPotentialComponent,
	  MonitoringTask._doLoadComponent):
	Cleanup, use MAX_RETRIES, and refactoring bug correction.

2007-06-28  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/adminconsts.py:
	* flumotion/transcoder/admin/admintask.py (AdminTask, AdminTask._abort,
	  AdminTask.__cancelComponentStartup,
	  AdminTask.__abortComponentStartup, AdminTask.__ebComponentLoadFailed,
	  AdminTask.__ebComponentNotHappy, AdminTask.__ebUIStateFailed,
	  AdminTask.__incRetryCounter, AdminTask.__canRetry):
	Changed MAX_ATTEMPT to MAX_RETRIES.
	Do not count as retry the cancelations of components startup.

2007-06-28  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/admin.py (TranscoderAdmin.__init__,
	  TranscoderAdmin.onMonitoredFileAdded,
	  TranscoderAdmin.onTranscodingTerminated):
	Prevent duplication of files pending transcodification in testing code.

2007-06-28  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/filetranscoder.py
	  (FileTranscoderMedium.remote_acknowledge,
	  FileTranscoder.__cbJobTerminated,
	  FileTranscoder.__ebAcknowledgeError):
	Properly return failures when acknowledge fail,
	and made the acknowledge remote method return
	the transcoding status.

2007-06-28  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/job.py
	  (TranscoderJob.__bbMoveInputFile, TranscoderJob.moveSource):
	Forward to the event listener the errors when moving input file.	 

2007-06-27  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/admintask.py (IAdminTask.getWorker,
	  IAdminTask.waitValidWorker, IAdminTask.waitSynchronized, AdminTask,
	  AdminTask.__init__, AdminTask.getLabel, AdminTask.getProperties,
	  AdminTask.isActive, AdminTask.hasTerminated,
	  AdminTask.getActiveComponent, AdminTask.getWorker,
	  AdminTask.getComponents, AdminTask.iterComponents,
	  AdminTask.addComponent, AdminTask.removeComponent, AdminTask.start,
	  AdminTask.pause, AdminTask.resume, AdminTask.stop, AdminTask.abort,
	  AdminTask.suggestWorker, AdminTask.waitSynchronized,
	  AdminTask.waitValidWorker, AdminTask._onComponentAdded,
	  AdminTask._onComponentRemoved, AdminTask._onComponentHold,
	  AdminTask._onComponentHoldCanceled, AdminTask._onComponentLost,
	  AdminTask._onComponentElected, AdminTask._onComponentRelieved,
	  AdminTask._onComponentStartingUp,
	  AdminTask._onComponentStartupCanceled,
	  AdminTask._doChainWaitSynchronized,
	  AdminTask._doChainWaitPotentialComponent, AdminTask._doStartup,
	  AdminTask._doAcceptSuggestedWorker, AdminTask._doChainTerminate,
	  AdminTask._doTerminated, AdminTask._doAborted,
	  AdminTask._doSelectPotentialComponent, AdminTask._doLoadComponent,
	  AdminTask._terminate, AdminTask._abort,
	  AdminTask._isPendingComponent, AdminTask._isElectedComponent,
	  AdminTask._hasElectedComponent, AdminTask._resetRetryCounter,
	  AdminTask._holdLostComponent, AdminTask._cancelComponentHold,
	  AdminTask._isHoldingLostComponent, AdminTask._waitStopComponent,
	  AdminTask._stopComponent, AdminTask._waitDeleteComponent,
	  AdminTask._deleteComponent, AdminTask.__startup,
	  AdminTask.__cbMultiDeleteResults, AdminTask.__bbTaskTerminated,
	  AdminTask.__relieveComponent, AdminTask.__electComponent,
	  AdminTask.__waitPotentialComponent,
	  AdminTask.__cbMultiUIStateResults,
	  AdminTask.__bbSelectPotentialComponent,
	  AdminTask.__cancelComponentStartup, AdminTask.__componentStarted,
	  AdminTask.__componentLoaded, AdminTask.__delayedStartComponent,
	  AdminTask.__startComponent, AdminTask.__ebPotentialComponentFailure,
	  AdminTask.__cbGotPotentialComponent, AdminTask.__loadNewComponent,
	  AdminTask.__shouldContinueComponentStartup,
	  AdminTask.__cbComponentLoadSucceed,
	  AdminTask.__ebComponentLoadFailed, AdminTask.__cbComponentGoesHappy,
	  AdminTask.__ebComponentNotHappy, AdminTask.__cbGotUIState,
	  AdminTask.__ebUIStateFailed, AdminTask.__ebComponentStopFailed,
	  AdminTask.__ebComponentDeleteFailed, AdminTask.__cbGetValidWorker,
	  AdminTask.__ebNoValidWorker, AdminTask.__asyncHoldTimeout,
	  AdminTask.__getRetryCount, AdminTask.__incRetryCounter,
	  AdminTask.__canRetry, AdminTask.__getRetryDelay):
	* flumotion/transcoder/admin/montask.py (MonitoringTask,
	  MonitoringTask.__init__, MonitoringTask._onComponentAdded,
	  MonitoringTask._onComponentRemoved,
	  MonitoringTask._onComponentElected,
	  MonitoringTask._onComponentRelieved,
	  MonitoringTask._onComponentStartupCanceled,
	  MonitoringTask._doStartup, MonitoringTask._doAborted,
	  MonitoringTask._doSelectPotentialComponent,
	  MonitoringTask._doLoadComponent,
	  MonitoringTask.onComponentMoodChanged):
	Cleanup and refactorization. Grouped all common code in the
	base class AdminTask, to be able to share it between
	MonitoringTask and TranscodingTask.
	
2007-06-27  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/adminelement.py
	  (AdminElement.__cbWaitChildIdle, AdminElement.__cbLogFailures):
	Changed to not abort with the first error, and log all failures.

2007-06-27  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/adminconsts.py:
	* flumotion/transcoder/admin/monitoring.py
	  (Monitoring.__cbRetrieveActiveWorker):
	* flumotion/transcoder/admin/transcoding.py
	  (Transcoding.__cbRetrieveActiveWorker):
	Constants cleanup.

2007-06-26  Sebastien Merle  <sebastien@fluendo.com>

	* conf/transcoder-data.ini:
	Force the maximum number of thumbnail to creates,
	because of some media files having wrong duration.

2007-06-26  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/proxies/componentset.py
	  (ComponentSetSkeleton.__cbPostAcceptAddition,
	  ComponentSetSkeleton.__removeComponent,
	  BaseComponentSet._doAddComponent,
	  BaseComponentSet._doRejectComponent):
	Properly remove rejected components.

2007-06-26  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/proxies/transcoderproxy.py
	  (TranscoderProxy.waitStatus):
	Change the waitStatus to use the remote method inplace of
	the UI State. This way it works even with early error cases.

2007-06-26  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/adminconsts.py:
	* flumotion/transcoder/admin/montask.py
	  (IMonitoringTaskListener.onFailToRunOnWorker,
	  MonitoringTaskListener.onFailToRunOnWorker, MonitoringTask.__init__,
	  MonitoringTask.suggestWorker, MonitoringTask.onComponentMoodChanged,
	  MonitoringTask.__relieveMonitor,
	  MonitoringTask.__delayedStartMonitor,
	  MonitoringTask.__cbMonitorGoesHappy,
	  MonitoringTask.__ebMonitorDeleteFailed,
	  MonitoringTask.__getRetryCount, MonitoringTask.__resetRetryCounter,
	  MonitoringTask.__incRetryCounter,
	  MonitoringTask.__isRetriesExhausted, MonitoringTask.__getRetryDelay,
	  MonitoringTask.__holdLostMonitor, MonitoringTask.__releaseHold,
	  MonitoringTask.__isHoldingMonitor,
	  MonitoringTask.__asyncCheckIfStillLost):
	Added a retry limit with exponencial delay between retries.
	When a component goes lost the admin can wait for a fixed
	time to resolve transient network failure. 

2007-06-26  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/proxies/componentproxy.py
	  (BaseComponentProxy.__cbGotActiveWorker,
	  BaseComponentProxy.__ebGetActiveWorkerFail,
	  BaseComponentProxy.__componentActiveWorkerChanged,
	  BaseComponentProxy.__discardUIState,
	  BaseComponentProxy.__cbUIStateRetrievalDone):
	* flumotion/transcoder/admin/proxies/managerproxy.py
	  (ManagerProxy.__init__, ManagerProxy.getWorkers,
	  ManagerProxy.getContext, ManagerProxy.getWorkerByName,
	  ManagerProxy.waitWorkerByName):
	* flumotion/transcoder/admin/waiters.py
	  (ValueWaiters.__asyncWaitTimeout, ItemWaiters, ItemWaiters.__init__,
	  ItemWaiters.isWaiting, ItemWaiters.wait, ItemWaiters.setValue,
	  ItemWaiters.getValue, ItemWaiters.setItem, ItemWaiters.delItem,
	  ItemWaiters.getItem, ItemWaiters.getItems,
	  ItemWaiters.__asyncWaitTimeout, ItemWaiters.__fireCallbacks):
	Added a waiter that wait for item to be added to a dict.
	Use this waiter to wait for worker instance when a component worker
	state property is set to know when firing events.

2007-06-26  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/filetranscoder.py
	  (FileTranscoderMedium.remote_getStatus, FileTranscoder.getStatus,
	  FileTranscoder.init, FileTranscoder._fireStatusChanged,
	  FileTranscoder.__abortTranscoding, FileTranscoder.__writeReport):
	* flumotion/transcoder/enums.py:
	Added the "aborted" status value used when something not related
	to the transcoding task make the job fail.
	Added a remote method to retrieve the status to be able
	to retrieve it even when the UI State is not disponible.

2007-06-26  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/transcoder.py
	  (MultiTranscoder._updateProgress):
	Handle media without known duration, and ensure that the progress
	send to the callback is in [0,100]
	
2007-06-26  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/targets.py (_sourceDiscovered,
	  _setupThumbnailByFrames, _setupThumbnailByKeyFrames,
	  _setupThumbnailByPercent, _percent_get_next,
	  _thumbnail_prob_by_percent, _setupThumbnailBySeconds,
	  _seconds_get_next, _thumbnail_prob_by_seconds):
	Properly do the thumbnailing calcules relative to the first timestamp.
	If no duration is available fallback to second-based thumbnailing.

2007-06-25  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/filetranscoder.glade:
	* flumotion/component/transcoder/filetranscoder_admin_gtk.py
	  (FileTranscoderAdminGtkNode._jobProgressEvent):
	* flumotion/component/transcoder/job.py
	  (TranscoderJob._transcoderProgressCallback):
	* flumotion/component/transcoder/transcoder.py (MultiTranscoder.start,
	  MultiTranscoder._discovered_callback, MultiTranscoder._startProgress,
	  MultiTranscoder._updateProgress):
	Do not abort if the pipeline duration cannot be retrieved.

2007-06-25  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/filetranscoder.py
	  (FileTranscoder.do_setup):
	Corrected the job setup from a report.

2007-06-25  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/compconsts.py:
	* flumotion/component/transcoder/gstutils.py (Discoverer.__init__):
	Moved the max-interleave constants to compconsts.
	
2007-06-25  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/binmaker.py (_logPreferredSize,
	  makeVideoEncodeBin):
	  Use transcoder.log insteed of gst logging.

2007-06-22  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/transtask.py
	  (TranscodingTask.onTranscoderJobStateChanged):
	 Corrected logging bug.

2007-06-22  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/admin.py (TranscoderAdmin.__startup):
	Removed debug logging.
	
2007-06-22  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/job.py
	  (TranscoderJob.__bbJobTerminated):
	Properly propagate failures.

2007-06-22  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/filetranscoder.py
	  (FileTranscoder.do_setup, FileTranscoder.do_start,
	  FileTranscoder.do_stop, FileTranscoder.__abortTranscoding,
	  FileTranscoder.__cbJobDone, FileTranscoder.__ebJobFailed,
	  FileTranscoder.__cbJobTerminated,
	  FileTranscoder.__ebAcknowledgeError, FileTranscoder.__writeReport):
	Properly abort and change the status when an exception is catched.
	
2007-06-22  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/montask.py
	  (MonitoringTask.__ebMonitorDeleteFailed):
	Corrected some logging bug.

2007-06-22  Sebastien Merle  <sebastien@fluendo.com>

	* conf/transcoder-admin.ini:
	Changed the configuration to use teh dev cluster.

2007-06-22  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/filetranscoder.py:
	* flumotion/transcoder/enums.py:
	Some cleanup.

2007-06-22  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/base.xml:
	* flumotion/component/transcoder/filemonitor.xml:
	* flumotion/component/transcoder/filetranscoder.xml:
	Corrected the components registry files.

2007-06-20  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/watcher.py
	  (PeriodicalWatcher._checkForChanges):
	Corrected a bug that keep the watcher emiting file-completed.

2007-06-20  Sebastien Merle  <sebastien@fluendo.com>

	* conf/transcoder-data.ini:
	Corrected typo.

2007-06-20  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/pipelinecrawler.py
	  (PipelineCrawler._padElement):
	Better handling of gstreamer changes.	  

2007-06-20  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/transtask.py
	  (TranscodingTask.waitActiveWorker, TranscodingTask.waitSynchronized,
	  TranscodingTask.__electTranscoder, TranscodingTask.ebGetStatusError,
	  TranscodingTask.__cbSelectPotentialTranscoder,
	  TranscodingTask.__cbGotPotentialTranscoder):
	Directly wait for UI state insteed of transcoder status.
	
2007-06-20  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/admin.py (TranscoderAdmin.deb,
	  TranscoderAdmin.__ebAdminInitializationFailed,
	  TranscoderAdmin.__ebSartupFailed):
	* flumotion/transcoder/admin/adminconsts.py:
	* flumotion/transcoder/admin/admintask.py (IAdminTask.waitActiveWorker,
	  IAdminTask.waitSynchronized):
	* flumotion/transcoder/admin/montask.py
	  (MonitoringTask.waitSynchronized, MonitoringTask.__electMonitor):
	* flumotion/transcoder/admin/taskmanager.py (TaskManager.__init__,
	  TaskManager.start, TaskManager.pause, TaskManager.resume,
	  TaskManager.addComponent, TaskManager.removeComponent,
	  TaskManager.waitSynchronized, TaskManager.__cbStartup,
	  TaskManager.__ebPauseFailed, TaskManager.__cbWaitSynchronized):
	Added a waitSynchronized that is called for each task and waited for
	before firing the deferred returned by the taskmanager's start method.
	It's used for ensuring the monitro retrived there UI state and
	synchronized there UI events for the admin to create the transcoding
	tasks. This way when the transcoding task manager start,
	it have all the information to properly resume tasks.

2007-06-20  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/proxies/componentproxy.py
	  (BaseComponentProxy.__init__, BaseComponentProxy.waitUIState,
	  BaseComponentProxy.__retrieveUIState,
	  BaseComponentProxy.__ebUIStateRetrievalFailed):
    Corrected a bug that made the ui state to be retrieved
    more than one time, and then fail when trying to register
    the listeners.

2007-06-20  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/compconsts.py:
	* flumotion/component/transcoder/filemonitor.py (FileMonitor.do_start):
	* flumotion/component/transcoder/transcoder.py
	  (MultiTranscoder._discovered_callback):
	* flumotion/component/transcoder/watcher.py (Watcher, Watcher.__init__,
	  PeriodicalWatcher.__init__, PeriodicalWatcher.start,
	  PeriodicalWatcher._checkForChanges, DirectoryWatcher.__init__,
	  DirectoryWatcher.step, FilesWatcher, FilesWatcher.__init__):
	  Corrected a major bug of the watchers. They virtualy don't work before.
	  Changed the watchers to use LoggerProxy.

2007-06-20  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/job.py:
	  Removed debug lines that was commited.

2007-06-20  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/job.py (TranscoderJob.readyForAck,
	  TranscoderJob.__cbDoAcknowledge, TranscoderJob.__bbMoveInputFile):
	  Corrected a bug where the failures were not propagated 
	  to the acknowledge deferred chain.

2007-06-20  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/transtask.py
	  (TranscodingTask.hasTerminated,
	  TranscodingTask.onTranscoderJobStateChanged,
	  TranscodingTask.__terminateTask, TranscodingTask.__cbTaskTerminated,
	  TranscodingTask.__waitStopTranscoder,
	  TranscodingTask.__stopTranscoder,
	  TranscodingTask.__waitDeleteTranscoder,
	  TranscodingTask.__deleteTranscoder,
	  TranscodingTask.__ebTranscoderStopFailed,
	  TranscodingTask.__ebTranscoderDeleteFailed,
	  TranscodingTask.__ebAcknowledgeFailed):
	  Now wait for all transcoder to be stoped and deleted 
	  before firing the TranscodingTerminated event.

2007-06-20  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/utils.py (resolveFailure):
	  Made the resolveFailure resolve all failures
	  if no error type is specified.

2007-06-20  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/admintask.py (IAdminTask.isActive,
	  IAdminTask.hasTerminated):
	* flumotion/transcoder/admin/montask.py (MonitoringTask.hasTerminated,
	  MonitoringTask.__deleteMonitor):
	* flumotion/transcoder/admin/taskmanager.py
	  (TaskManager.__apartTasklessComponent,
	  TaskManager.__releaseTasklessComponent,
	  TaskManager.__cbRemoveComponent):
	  Added hasTerminated method.
	  Added some more logging.

2007-06-20  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/proxies/componentproxy.py
	  (BaseComponentProxy.__isOperationTerminated,
	  BaseComponentProxy.__asyncForceStop):
	* flumotion/transcoder/errors.py (OperationAbortedError):
	  Changed OperationAborted exception to OperationAbortedError.
	
2007-06-20  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/targets.py
	  (AudioVideoTarget._sourceDiscovered):
	  Log when a input file do not have audio or video
	  stream but we tolerate it.

2007-06-20  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/transtask.py (TranscodingTask.cbGotStatus,
	  TranscodingTask.__cbSelectPotentialTranscoder):
	  Do not select as potential transcoder one taht 
	  has already been acknowledged. This to allow the transcoding
	  of a file that previously fail and for which a sad component
	  is still running.

2007-06-20  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/proxies/componentproxy.py
	  (BaseComponentProxy._getUIDictValue,
	  BaseComponentProxy.__isOperationTerminated):
	  Check for the PBConnectionLost exception.
	  Corrected a bug where the UI state waiter was used
	  insteed of the proper value, changed to use the getter.
	  
2007-06-20  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/context.py (TargetContext,
	  TargetContext.shouldBeAnalyzed, TargetContext.shouldGenerateLinkFile,
	  TargetContext.shouldHaveAudio, TargetContext.shouldHaveVideo):
	* flumotion/component/transcoder/job.py
	  (TranscoderJob.__cbProcessTarget, TranscoderJob.__cbTargetIsAMedia):
	  Properly handle the verification of target files when
	  beeing tolerant.

2007-06-20  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/compconsts.py:
	Added component's constants file.

2007-06-19  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/adminconsts.py:
	* flumotion/transcoder/admin/admintask.py
	  (IAdminTask.waitActiveWorker):
	* flumotion/transcoder/admin/monitoring.py
	  (Monitoring.__cbMonitorSetGoesIdle,
	  Monitoring.__cbRetrieveActiveWorker, Monitoring.__ebStartingFailure):
	* flumotion/transcoder/admin/montask.py
	  (MonitoringTask.waitActiveWorker):
	* flumotion/transcoder/admin/transcoding.py
	  (Transcoding.__cbTranscoderSetGoesIdle,
	  Transcoding.__cbRetrieveActiveWorker,
	  Transcoding.__ebStartingFailure):
	* flumotion/transcoder/admin/transtask.py
	  (TranscodingTask.waitActiveWorker,
	  TranscodingTask.onTranscoderJobStateChanged,
	  TranscodingTask.__waitPotentialTranscoder,
	  TranscodingTask.cbGotStatus, TranscodingTask.ebGetStatusError,
	  TranscodingTask.__cbSelectPotentialTranscoder,
	  TranscodingTask.__startTranscoder,
	  TranscodingTask.__ebPotentialTranscoderFailure,
	  TranscodingTask.__cbGotPotentialTranscoder,
	  TranscodingTask.__loadTranscoder):
	* flumotion/transcoder/utils.py (overrideResult, shiftResult):
	Made the active worker retrieval asynchronous to allow
	the use of UI state information during worker selection.

2007-06-19  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/proxies/componentproxy.py
	  (BaseComponentProxy._getUIDictValue):
	  For now, do not allow getting a ui state value
      if the UI state has not been retrieved
	
2007-06-19  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/proxies/componentproxy.py
	  (BaseComponentProxy._getUIDictValue,
	  BaseComponentProxy._waitUIDictValue,
	  BaseComponentProxy.__getUIDictValue):
	* flumotion/transcoder/admin/proxies/transcoderproxy.py
	  (TranscoderProxy.getTranscoderProgress,
	  TranscoderProxy.waitTranscoderProgress, TranscoderProxy.getStatus,
	  TranscoderProxy.waitStatus, TranscoderProxy.getJobState,
	  TranscoderProxy.waitJobState, TranscoderProxy.isAcknowledged,
	  TranscoderProxy.waitIsAcknowledged):
	  Added the synchronous getter too. There are usefull in the event
	  handlers where you  know the ui state is set.

2007-06-19  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/proxies/transcoderproxy.py
	  (TranscoderProxy.waitTranscoderProgress, TranscoderProxy.waitStatus,
	  TranscoderProxy.waitJobState, TranscoderProxy.waitIsAcknowledged):
	  Change getters names from getXX to waitXX because it return a deferred.

2007-06-19  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/proxies/componentproxy.py
	  (BaseComponentProxy._getUIDictValue,
	  BaseComponentProxy.__cbGetUIDictValue):
	* flumotion/transcoder/admin/proxies/transcoderproxy.py
	  (TranscoderProxy.getTranscoderProgress, TranscoderProxy.getStatus,
	  TranscoderProxy.getJobState, TranscoderProxy.isAcknowledged,
	  TranscoderProxy.getReport):
	  Change the UI State's getters to return deferred.

2007-06-19  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/targets.py
	  (AudioVideoTarget._updatePipeline):
	  Corrected copy/past error.

2007-06-19  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/proxies/componentproxy.py
	  (BaseComponentProxy.retrieveUIState):
	  Made the retrieveUIState deferred return the component 
	  inplace of the state reference.

2007-06-19  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/montask.py (MonitoringTask.stop,
	  MonitoringTask.__startup, MonitoringTask.__startMonitor,
	  MonitoringTask.__cbMonitorStartSucceed,
	  MonitoringTask.__cbMonitorGoesHappy):
	* flumotion/transcoder/admin/transtask.py (TranscodingTask.stop,
	  TranscodingTask.__cbTranscoderGoesHappy):
	Corrected a bug when removeing listener, and comparing worker name.

2007-06-19  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/admin.py (TranscoderAdmin,
	  TranscoderAdmin.onMonitoredFileAdded,
	  TranscoderAdmin.onMonitoredFileRemoved,
	  TranscoderAdmin.onTranscodingTerminated):
	  Basic transcoding impelmentation without scheduling.

2007-06-19  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/proxies/groupproxy.py
	  (ComponentGroupProxy._stateAppend):
	Menor cleanup.

2007-06-19  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/proxies/componentproxy.py
	  (BaseComponentProxy.__isOperationTerminated,
	  BaseComponentProxy.__stopOrDelete,
	  BaseComponentProxy.__asyncForceStop,
	  BaseComponentProxy.__asyncForceDelete,
	  BaseComponentProxy.__asyncRetryKillIfNeeded,
	  BaseComponentProxy.__asyncForceKillFailed,
	  BaseComponentProxy.__asyncForceStopFailed,
	  BaseComponentProxy.__asyncForceDeleteFailed):
	* flumotion/transcoder/errors.py (OperationAborted,
	  OperationAborted.__init__):
	  Try to properly handle stale broker error.

2007-06-19  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/transcoder.py
	  (MultiTranscoder._updateProgress):
	  Corrected a bug for when there is no sink yet.

2007-06-19  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/filetranscoder.py
	  (FileTranscoderMedium.remote_acknowledge,
	  FileTranscoder.do_acknowledge, FileTranscoder.init,
	  FileTranscoder.do_setup, FileTranscoder.onAcknowledged,
	  FileTranscoder.__ebAcknowledgeError,
	  FileTranscoder.__finalizeDiagnoseMode,
	  FileTranscoder.__finalizeStandardMode):
	* flumotion/component/transcoder/job.py (TranscoderJob.acknowledge):
	Allow acknowledge method to be called more than one time.
	Some name cleanup.
	
2007-06-19  Sebastien Merle  <sebastien@fluendo.com>

	* conf/transcoder-data.ini:
	* flumotion/component/transcoder/targets.py
	  (AudioTarget._sourceDiscovered, VideoTarget._sourceDiscovered,
	  AudioVideoTarget.__init__, AudioVideoTarget._sourceDiscovered,
	  AudioVideoTarget._updatePipeline, _sourceDiscovered):
	* flumotion/transcoder/admin/datasource/dataprops.py (AudioVideoData):
	* flumotion/transcoder/admin/datasource/datasource.py
	  (IDataSource.retrieveTargetConfig):
	* flumotion/transcoder/admin/datasource/dummysource.py:
	* flumotion/transcoder/admin/datastore/configstore.py
	  (AudioVideoConfig.getTolerance):
	* flumotion/transcoder/admin/transprops.py
	  (createTranscodingConfigFromContext):
	* flumotion/transcoder/enums.py:
	* flumotion/transcoder/transconfig.py (AudioVideoConfig):
	Added a tolerence property for the Audio/Video tragets to
	be able to allow the input files without audio.

2007-06-15  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/transtask.py
	  (TranscodingTask.onTranscoderJobStateChanged):
	  Added logging of transcoder job state changes.

2007-06-15  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/filetranscoder.py
	  (FileTranscoderMedium.remote_acknowledge,
	  FileTranscoder.do_acknowledge, FileTranscoder.init,
	  FileTranscoder.do_setup, FileTranscoder.onacknowledged,
	  FileTranscoder.__ebacknowledgeError,
	  FileTranscoder.__finalizeStandardMode):
	Corrected typo.
	
2007-06-15  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/log.py:
	Changed wrong WARNING to WARN.

2007-06-15  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/Makefile.am:
	* flumotion/component/transcoder/base.xml:
	* flumotion/component/transcoder/filemonitor.py (FileMonitor,
	  FileMonitor.init):
	* flumotion/component/transcoder/filetranscoder.py (FileTranscoder,
	  FileTranscoder.init, FileTranscoder._logCurrentException):
	* flumotion/component/transcoder/filetranscoder.xml:
	* flumotion/component/transcoder/transcoder.py (MultiTranscoder):
	* flumotion/component/transcoder/watcher.py (Watcher):
	* flumotion/transcoder/admin/admin.py (TranscoderAdmin):
	* flumotion/transcoder/admin/datasource/dummysource.py
	  (DummyDataSource):
	* flumotion/transcoder/admin/datasource/filesource.py (FileDataSource):
	* flumotion/transcoder/admin/datasource/sqlsource.py (SQLDataSource):
	* flumotion/transcoder/admin/datastore/adminstore.py (StoreLogger):
	* flumotion/transcoder/admin/main.py (possess, exorcize, main):
	* flumotion/transcoder/admin/montask.py:
	* flumotion/transcoder/admin/proxies/managerset.py
	  (FlumotionProxiesLogger):
	* flumotion/transcoder/admin/taskmanager.py (TaskManager):
	* flumotion/transcoder/admin/transtask.py:
	* flumotion/transcoder/log.py (setDefaultCategory, log, debug, info,
	  warning, error):
	* flumotion/transcoder/process.py (Process):
	Added a constant file for the components.
	More proxying of flumotion.common.log in flumotion.transcoder.log.

2007-06-15  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/admin.py (TranscoderAdmin):
	* flumotion/transcoder/admin/adminconsts.py:
	* flumotion/transcoder/admin/datastore/adminstore.py (StoreLogger):
	* flumotion/transcoder/admin/main.py (possess, exorcize, main):
	* flumotion/transcoder/admin/monitoring.py (Monitoring):
	* flumotion/transcoder/admin/proxies/managerset.py
	  (FlumotionProxiesLogger):
	* flumotion/transcoder/admin/transcoding.py (Transcoding):
	Changed the logging categories, and centralized them in adminconsts.

2007-06-15  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/taskmanager.py (TaskManager.getLabel,
	  TaskManager.addTask, TaskManager.removeTask, TaskManager.start,
	  TaskManager.pause, TaskManager.resume, TaskManager.abort,
	  TaskManager.addComponent, TaskManager.removeComponent,
	  TaskManager.onComponentMoodChanged, TaskManager._tryStarting,
	  TaskManager.__cbAddComponent, TaskManager.__ebGetPropertiesFailed,
	  TaskManager.__ebStopFailed, TaskManager.__ebDeleteFailed,
	  TaskManager.__ebStartupFailed, TaskManager.__ebResumeFailed,
	  TaskManager.__ebPauseFailed):
	  Added a label to the task manager for better logging.

2007-06-15  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/montask.py
	  (MonitoringTask.__electMonitor):
	* flumotion/transcoder/admin/transtask.py
	  (TranscodingTask.__electTranscoder):
	Corrected get UI state callbacks parameter.

2007-06-15  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/utils.py (callWithTimeout, __ebForwardErrback,
	  __cbForwardCallback):
	  Return the correct deferred, and properly cancel the timeout.

2007-06-15  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/utils.py (__ebForwardErrback,
	  __cbForwardCallback):
	Corrected function parameter order.

2007-06-15  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/utils.py (callWithTimeout):
	Should return the new deferred.

2007-06-15  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/compprops.py:
	* flumotion/transcoder/admin/context/customercontext.py:
	* flumotion/transcoder/admin/context/profilecontext.py:
	* flumotion/transcoder/admin/context/transcontext.py:
	* flumotion/transcoder/admin/monprops.py:
	* flumotion/transcoder/admin/proxies/componentproxy.py
	  (BaseComponentProxy.kill,
	  BaseComponentProxy.__asyncRetryKillIfNeeded,
	  BaseComponentProxy.__asyncForceStopFailed,
	  BaseComponentProxy.__asyncForceDeleteFailed):
	* flumotion/transcoder/admin/proxies/groupproxy.py
	  (ComponentGroupProxy._loadComponent):
	* flumotion/transcoder/admin/proxies/monitorset.py:
	* flumotion/transcoder/admin/proxies/transcoderset.py:
	* flumotion/transcoder/admin/transprops.py:
	Corrected some import path that changed.

2007-06-14  Sebastien Merle  <sebastien@fluendo.com>
	
	* The admin can now react to monitoring event and 
	start basic transcoding tasks without acknowlegment.

2007-06-14  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/adminconsts.py: 
	* flumotion/transcoder/admin/admintask.py: 
	* flumotion/transcoder/admin/montask.py: 
	* flumotion/transcoder/admin/taskmanager.py: 
	* flumotion/transcoder/admin/transtask.py: 
	Revised transcoding task and transcoding manager.

2007-06-14  Sebastien Merle  <sebastien@fluendo.com>

	* The admin can now start transcoder components with 
	proper configuration generation, and path virtualization.

2007-06-08  Sebastien Merle  <sebastien@fluendo.com>

	* Refactoring for generic idle state detection,
	  and source cleanup.

2007-05-31  Sebastien Merle  <sebastien@fluendo.com>

	* First version with monitoring distribution.

2007-05-08  Sebastien Merle  <sebastien@fluendo.com>

	* Added monitors starting.

2007-05-07  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/job.py: 
	* flumotion/component/transcoder/transcoder.py: 
	* flumotion/component/transcoder/binmaker.py:
	Applied corrections made for the old transcoder.
	Did some cleanup.	

2007-04-04  Sebastien Merle  <sebastien@fluendo.com>

	* Corrected the componenet UI to show in groud control.
	* Implemented low level loadComponent in proxies.

2007-03-28  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/properties.py:
	Corrected a bug that made multi level property lists to fail.
	* flumotion/transcoder/admin/adminconfig.py: 
	* flumotion/transcoder/admin/admin.py: 
	* flumotion/transcoder/admin/contexts/admincontext.py: 
	Made the context determine the datasource to use.
	* flumotion/transcoder/admin/datasource/filesource.py: 
	* flumotion/transcoder/admin/datasource/dataprops.py: 
	Added a basic read only file data source that read data from an INI file.

2007-03-27  Sebastien Merle  <sebastien@fluendo.com>

	* Added to each proxies a context that abstract configuration.

2007-03-27  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/proxies/atmosphereproxy.py: 
	* flumotion/transcoder/admin/proxies/flowproxy.py: 
	* flumotion/transcoder/admin/proxies/fluproxy.py: 
	* flumotion/transcoder/admin/proxies/managerproxy.py: 
	* flumotion/transcoder/admin/proxies/monitorproxy.py: 
	* flumotion/transcoder/admin/proxies/transcoderproxy.py: 
	* flumotion/transcoder/admin/proxies/workerproxy.py: 
	* flumotion/transcoder/admin/proxies/componentproxy.py: 
	Made all proxies to have a reference to there manager proxy.
	Now the componenet proxies retrieve the reference 
	to the proxy of the worker they are running.
	

2007-03-26  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/proxies/transcoderset.py: 
	* flumotion/transcoder/admin/proxies/transcoderproxy.py: 
	* flumotion/transcoder/admin/proxies/monitorset.py: 
	* flumotion/transcoder/admin/proxies/monitorproxy.py:
	Added Proxies and Sets for the transcoder componenets.
	* flumotion/transcoder/enums.py: 
	* flumotion/component/transcoder/job.py: 
	* flumotion/component/transcoder/filetranscoder.py: 
	* flumotion/component/transcoder/filemonitor.py: 
	* flumotion/component/transcoder/filemonitor_admin_gtk.py: 
	Changed more strang-as-enum to flumotion.common.enum
	* Some random refactoring...
	

2007-03-23  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/admin.py: 
	* flumotion/transcoder/admin/proxies/componentset.py: 
	* flumotion/transcoder/admin/proxies/componentproxy.py: 
	Really added the Flumotion Component Proxy and a component set.


2007-03-22  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/properties.py:
	Now properly raise AttributeError from __getattr__.
	* Added the flumotion element proxying framework.
	* Did some folder structure refactoring.
	* Broke old common.py in errors.py, enums.py and log.py

2007-03-13  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/context.py: 
	Added a random number to the temporary files
	to let two task with the same input file
	to run at the same time.
	Add the PID to the report name.
	* flumotion/component/transcoder/job.py: 
	* flumotion/transcoder/jobconfig.py: 
	* flumotion/transcoder/jobreport.py: 
	Added time reporting.
	Change report-file to report-template 
	to add a custom part to the filename.
	* flumotion/transcoder/properties.py: 
	Added a datetime property.
	* flumotion/component/transcoder/filetranscoder.py: 
	Added an acknowledge step, this way zombie component
	will not move input files preventing other transcoding
	tasks for the same input file to work properly.
	The transcoding task will now move input file 
	only after acknowledgment.

2007-03-12  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/jobconfig.py: 
	* flumotion/transcoder/jobreport.py: 
	* flumotion/transcoder/properties.py: 
	* flumotion/transcoder/common.py: 
	* flumotion/component/transcoder/job.py: 
	* flumotion/component/transcoder/targets.py: 
	* flumotion/component/transcoder/filetranscoder.py: 
	* flumotion/component/transcoder/videosize.py: 
	* flumotion/component/transcoder/context.py: 
	* flumotion/component/transcoder/binmaker.py: 
	Changed all string-as-enum to flumotion.common.enum

2007-03-09  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/admin/targetstore.py: 
	* flumotion/transcoder/admin/profilestore.py: 
	* flumotion/transcoder/admin/customerstore.py: 
	* flumotion/transcoder/admin/adminstore.py: 
	* flumotion/transcoder/admin/basestore.py: 
	Removed some unused imports

2007-03-09  Sebastien Merle  <sebastien@fluendo.com>

	* Made the TranscoderError keeps information about
	what exception or failure cause it to be raised.
	Added custom getExceptionMessage and getFailureMessage
	that return more information if a TranscoderError is involved.
	Change all modules to use these new functions.
	* Created a data source interface to retrieve transcoder data
	asynchronously, and implemented a dummy data source with
	static data.
	* Created Store classes that are able to load there data from
	a specified data source and initialise asynchronously.
	These classes handle event broadcasting about customers, profiles targets
	events like addition deletion and so on.

2007-03-01  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/transcoder/jobconfig.py: 
	* flumotion/transcoder/jobreport.py: 
	* flumotion/transcoder/properties.py:
	The root property bags should now  inherite from RootPropertyBag,
	and the root bag parent is itself.
	Added a ChildDict property.
	Corrected some setup bugs to be able to directly assign a bag.

2007-03-01  Sebastien Merle  <sebastien@fluendo.com>

	* Moved LoggerProxy ans TranscoderError to flumotion/transcoder/common
	* Changed the component name to file-monitor and file-transcoder
	and changed the class names for consistency.

2007-02-28  Sebastien Merle  <sebastien@fluendo.com>

	* Deleted old transcoder files, and changed the new one 
	from flumotion/cluster/transcoder to flumotion/transcoder.
	Started the transcoder admin in flumotion/transcoder/admin
	(better that flumotion/cluster/transcoder/admin...)
	* Some minor changes and cleaning to the properties classes.

2007-02-26  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/jobcomp.py: 
	* flumotion/cluster/transcoder/jobreport.py: 
	* flumotion/cluster/transcoder/jobconfig.py: 
	* flumotion/cluster/transcoder/inifile.py: 
	Change the  loading and saving of config/report to
	be extern from the properies description.
	This way The file format is independent from the 
	property objects.

2007-02-21  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/reporter.py: 
	Corrected a vicious typo in CPUUsageMixin.
	Removed some unused object field initialization.
	
2007-02-21  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/job.py: 
	Added the proper call to handle the CPU usage measurments.
	* flumotion/component/transcoder/reporter.py: 
	Added a class Mixin to handle usage measurments.
	Added some measurment (job, preprocess, transcoding) to Reporter,
	and some (postprocess, analyse) to TargetReporter.
	* flumotion/cluster/transcoder/jobreport.py: 
	Added a custom property to show CPU usage.
	Added some CPU usage properties to JobReport and TargetReport.
	* flumotion/cluster/transcoder/properties.py: 
	Let Fraction accept long values.

2007-02-21  Sebastien Merle  <sebastien@fluendo.com>
	* flumotion/component/transcoder/job.py: 
	Uncommented the input file moving.
	* doc/design.odt: 
	Added a short draft of design document.
	
2007-02-21  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/cluster/transcoder/pipelinecrawler.py: 
	Better handling of gstreamer internal changes when
	crawling the pipline using non-standard method.

2007-02-20  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/reporter.py: 
	* flumotion/component/transcoder/context.py: 
	* flumotion/component/transcoder/jobcomp.py: 
	* flumotion/component/transcoder/job.py: 
	Refactored to make the transcoding job a lot more independent
	of the specified configuration and report. 
	Now all is encapsulated in a Context class that handle
	all the job specifics. A Reporter class has been added
	that help the filling of the report.
	This way the Job can use whatsoever kind of config 
	and report object.
	* flumotion/component/transcoder/common.py: 
	Added A logger proxy class that delegate all logging
	calls to a specified logger, and can add some custom 
	arguments to the call.
	* flumotion/cluster/transcoder/pipelinecrawler.py: 
	Filters the None elements when crawling.
	* flumotion/cluster/transcoder/jobreport.py: 
	Moved all methods to the Reporter class.
	* flumotion/cluster/transcoder/jobconfig.py: 
	Moved all methods to the Context class.

2007-02-16  Sebastien Merle  <sebastien@fluendo.com>
	* flumotion/component/transcoder/job_admin_gtk.py: 
	Cleanup stateSetitem method.

2007-02-16  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/jobcomp.py: 
	Relay the transcoding job events to the UI with the uiState.
	* flumotion/component/transcoder/job.py: 
	The transcoding job now fire events.
	At creation, an event sink object can be specified 
	to receive the events.
	* flumotion/component/transcoder/job_admin_gtk.py: 
	Added a UI to the transcoding job.
	* flumotion/component/transcoder/job.py: 
	* flumotion/cluster/transcoder/jobreport.py: 
	Changed status to state and added a global status property.


2007-02-13  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/transcoder.py: 
	Now call the pipeline callback when the state change to PLAY.
	Pass the transcoder targets to the pipeline callback.
	Corrected the progression handling to take the smallest position
	of the pipeline sinks.
	* flumotion/component/transcoder/thumbsink.py: 
	Changed the sink to async, added a name parameter.
	* flumotion/component/transcoder/targets.py: 
	Added a tag parameter to better name the gst elements.
	Store the encoding bins to be able to generate a report.
	* flumotion/component/transcoder/binmaker.py: 
	Added queue elements at the beginning of the encoding bins.
	* flumotion/cluster/transcoder/pipelinecrawler.py: 
	Added a generic pipeline crawler class.
	Can be used to parse a pipeline the SAX way.
	* flumotion/cluster/transcoder/jobreport.py: 
	Add pipeline information report for the source and the targets.
	Separate the audio and video tags for discover report.
	* flumotion/cluster/transcoder/properties.py: 
	Added a value dictionary property.
	* flumotion/component/transcoder/jobcomp.py: 
	* flumotion/component/transcoder/job.py: 
	More separation between component and transcoding job.

2007-02-07  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/transcoder.py:
	Added progression notification.
	More exception handling within gstreamer called methods.
	* flumotion/component/transcoder/targets.py: 
	Changed the thumnailing prob methods and
	added a keyframe unit.
	* flumotion/component/transcoder/thumbsink.py: 
	Changed the base class from gst.Element to gst.BaseSink.
	* flumotion/component/transcoder/job.py: 
	Added basic progression logging.
	Test for config and report existance.
	* flumotion/cluster/transcoder/properties.py: 
	Changed the list item naming to support very large list.
	* flumotion/cluster/transcoder/jobconfig.py: 
	Added keyframe unit for thumbnailing targets.

2007-02-07  Sebastien Merle  <sebastien@fluendo.com>
	Added the project files. Was previously commited in fsp by error.

2007-02-06  Sebastien Merle  <sebastien@fluendo.com>
	* flumotion/component/transcoder/binmaker.py: 
	Added an optional parameter to the bin maker functions
	to be able to make bins without rate elementes.

2007-02-06  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/binmaker.py: 
	Reverted the video boxing filling color to black.
	* flumotion/component/transcoder/thumbsink.py: 
	* flumotion/component/transcoder/targets.py: 
	Added thumbnailing target with a custom sink.

2007-02-05  Sebastien Merle  <sebastien@fluendo.com>

	* flumotion/component/transcoder/common.py: 
	* flumotion/component/transcoder/job.py: 
	* flumotion/component/transcoder/jobcomp.py: 
	Separated the transcoding job from the flumotion component.
	* All files:
	Change the headers to have correct license.
	* flumotion/cluster/transcoder/jobconfig.py: 
	Added some thumbnail configuration properties.
	
2007-02-02  Sebastien Merle  <sebastien@fluendo.com>
	First commit of the new transcoder version.

2006-11-15  Andy Wingo  <wingo@pobox.com>

	* flumotion/transcoder/job.py (Job.finish, Job.fail): _exit
	instead of exit, so as to work correctly from deferred callbacks
	and other quoi.
	(Job.finish): Thanks distributed pychecker!

2006-11-09  Andy Wingo  <wingo@pobox.com>

	* flumotion/transcoder/transcoder.py
	(JobProcessProtocol.sendMessage): Fix handling of translatables.
	Fixes #402.

2006-11-07  Andy Wingo  <wingo@pobox.com>

	* flumotion/transcoder/config.py (Profile.__init__): Don't default
	to 30 channels of audio at 30 Hz.

	* flumotion/transcoder/trans.py (MultiTranscoder._makeEncodingBin)
	(MultiTranscoder._makeAudioEncodebin)
	(MultiTranscoder._makeVideoEncodebin)
	(MultiTranscoder._makePipeline): Construct the whole pipeline at
	the beginning, only linking the tee's sinks at PAUSED.

	* conf/flumotion-transcoder-test.ini: Add another config for
	testing two-at-a-time goodness.

2006-11-07  Edward Hervey  <edward@fluendo.com>

	* flumotion/transcoder/trans.py:
	Set the maximum bytes size of decodebin's internal queues to
	10 Mbytes.

2006-11-07  Andy Wingo  <wingo@pobox.com>

	* flumotion/transcoder/job.py (Job.transcode_done): Tell the
	output discoverers whether they should expect audio and video.
	(Job.output_discovered): Consider the output a failure if e.g. we
	expected video but didn't get it. Fixes #389.

2006-11-02  Andy Wingo  <wingo@pobox.com>

	* flumotion/transcoder/transcoder.py (Transcoder.startJob): Damn
	you Mike Smith!

2006-11-02  Thomas Vander Stichele  <thomas at apestaart dot org>

	* doc/redhat/flumotion-transcoder.init:
	  daemon now removes its own pid file

2006-11-02  Andy Wingo  <wingo@pobox.com>

	* flumotion/transcoder/Makefile.am (component_PYTHON): Dist
	job.py.

	* flumotion/transcoder/transcoder.py (InputHandler): Removed, no
	longer necessary.
	(JobProcessProtocol): Implemented a process protocol for jobs.
	(Transcoder): Track watched directories directly. Use the
	JobProcessProtocol to spawn jobs, allowing us to spawn multiple
	jobs. Sort tasks using a priority queue.

	* flumotion/transcoder/main.py (main): No need to tell the
	transcoder to run.

	* flumotion/transcoder/job.py (Job.get_output_filename): Use
	getOutputBasename from the profile.
	(Job.perform_get_request): Fix pychecker-caught errors.
	(usage): Fix usage.
	(Job.output_recognized): Update to use new cortado arguments, as
	in [4354], [4355], [4356].

	* conf/flumotion-transcoder-test.ini (maxjobs): Add maxjobs to the
	example.

	* flumotion/transcoder/config.py (Profile.getOutputBasename): New
	method.
	(Customer.alreadyProcessedFiles): New method.
	(Customer.alreadyProcessedFiles.all): Pithy!
	(Config.parse): Always set default values for [global] section.

	* flumotion/test/test_transcoder_config.py
	(TestConfigParser.testParseProfile): Test getOutputBasename.

	* misc/pycheckerhelp.py: Pacify pychecker?

	* flumotion/transcoder/config.py (Config): Make a SectionParser so
	that we can handle options in [global].

	* flumotion/test/test_transcoder_config.py
	(TestConfigParser.testParseFull): Test [global] parsing, and
	parsing of entire config files.

2006-11-01  Andy Wingo  <wingo@pobox.com>

	* flumotion/transcoder/job.py (Job): Implement a job object to do
	the transcode. Makes flumotion-transcoder-job work.

2006-11-01  Michael Smith  <msmith@fluendo.com>

	* flumotion/transcoder/transcoder.py:
	  Use true/false, not 1/0, because cortado doesn't understand the
	  latter.

2006-11-01  Michael Smith  <msmith@fluendo.com>

	* flumotion/transcoder/transcoder.py:
	  Missing c- on height check.

2006-11-01  Michael Smith  <msmith@fluendo.com>

	* flumotion/transcoder/transcoder.py:
	  Use New Hotness, not Old Crapness, when generating links to
	  cortado/gatekeeper.

2006-11-01  Thomas Vander Stichele  <thomas at apestaart dot org>

	* doc/redhat/flumotion-transcoder.init:
	  remove --log property since it was removed from the program

2006-11-01  Andy Wingo  <wingo@pobox.com>

	* flumotion/transcoder/main.py (daemonizeHelper): Don't force a
	dep on new flumotion.

2006-11-01  Thomas Vander Stichele  <thomas at apestaart dot org>

	* TODO:
	  add a note
	* flumotion-transcoder.spec.in:
	  package -job

2006-11-01  Andy Wingo  <wingo@pobox.com>

	* flumotion/transcoder/trans.py (calculateOutputSize)
	(getOutputVideoCaps): Factor out of the Profile object; these are
	just functions now.
	(MultiTranscoder._discoveredCb): Hah!

	* flumotion/transcoder/config.py (Config.parse): Fix parsing of
	whole files.

	* flumotion/transcoder/transcoder.py (InputHandler): Refactor to
	use the new config interface.
	(Transcoder): Refactor to use the new config interface.

	* bin/Makefile.am (sbin_SCRIPTS): 
	* bin/flumotion-transcoder-job.in: 
	* configure.ac: s/transcode-job/transcoder-job/.

	* flumotion/transcoder/config.py (Config.parse): Make sure we
	notice errors reading the config files.

	* flumotion/transcoder/main.py (main): Use the common daemonize
	facilities. Convert to the new config interface.

	* flumotion/transcoder/job.py (main): New file, not completely
	implemented yet.

	* bin/flumotion-transcoder-job.in: New file, will be what the
	transcoder will run.

	* bin/flumotion-transcoder.in: Make more conventional.

	* flumotion/transcoder/config.py (Customer.ensureDirs): Fix error
	caught by pychecker.
	(Customer.ensureDirs): Appeasement.

	* flumotion/test/test_transcoder_config.py (TestConfigParser):
	Remove a test stub.

2006-11-01  Michael Smith  <msmith@fluendo.com>

	* conf/flumotion-transcoder-test.ini:
	  Add my test config which just writes everything under /tmp/

2006-11-01  Andy Wingo  <wingo@pobox.com>

	* flumotion/transcoder/config.py (Profile.__init__): Add
	maxheight, maxwidth, extension properties.

	* flumotion/test/test_transcoder_config.py
	(TestConfigParser.testParseProfile): Test the profile parser.

	* flumotion/transcoder/config.py (Customer.ensureDirs): Factor out
	of __init__.
	(SectionParser.parseFromTable, Customer.__init__): Fix bugs caught
	by the test suite.

	* flumotion/test/test_transcoder_config.py
	(TestConfigParser.testParseCustomer): Test the customer parser.

	* flumotion/transcoder/Makefile.am (component_PYTHON): 
	* flumotion/transcoder/config.py: Refactor the config parser.

	* configure.ac: 
	* flumotion/Makefile.am: 
	* flumotion/test/Makefile.am: 
	* flumotion/test/__init__.py: 
	* flumotion/test/common.py: 
	* flumotion/test/test_transcoder_config.py: Add trial
	infrastructure.

2006-11-01  Michael Smith  <msmith@fluendo.com>

	* flumotion/transcoder/trans.py:
	* flumotion/transcoder/transcoder.py:
	  Add maxheight, maxwidth properties; doesn't change default
	  behaviour.

2006-11-01  Michael Smith  <msmith@fluendo.com>

	* flumotion/transcoder/trans.py:
	  Calculate input display aspect ratio correctly.

2006-11-01  Andy Wingo  <wingo@pobox.com>

	* README: Write a bit.

2006-11-01  Michael Smith  <msmith@fluendo.com>

	* flumotion/transcoder/transcoder.py:
	  Delete outputting 'framerate', since it was buggy, and is no longer
	  needed.
	  Don't divide by zero. Dividing by zero isn't cool.

2006-10-25  Edward Hervey  <edward@fluendo.com>

	* conf/flumotion-transcoder.ini:
	Added two new profiles, both Mpeg4Video and Raw Audio:
	_low : no change in video format, 800kbit/s
	_high : 720x576@25fps, 2Mbit/s, GOP of 10 frames

2006-10-24  Thomas Vander Stichele  <thomas at apestaart dot org>

	* flumotion/transcoder/transcoder.py:
	  don't move to errordirectory if it is not specified
	  use os._exit() in child to make sure we get out of the reactor

2006-10-24  Thomas Vander Stichele  <thomas at apestaart dot org>

	* flumotion/transcoder/trans.py:
	  remove audiorate, as it introduces clearly audible distortion
	  in the result files, and it seems to work fine without it

2006-10-24  Thomas Vander Stichele  <thomas at apestaart dot org>

	* conf/flumotion-transcoder.ini:
	* flumotion/transcoder/transcoder.py:
	  Add a "getrequest" config parameter through which creation
	  of an output file can be announced.  Can interpolate some
	  of the values related to the outgoing file.
	  Add example config for it.

2006-10-24  Thomas Vander Stichele  <thomas at apestaart dot org>

	* bin/flumotion-transcoder.in:
	* flumotion/transcoder/main.py:
	  Use twisted harder.

2006-10-24  Edward Hervey  <edward@fluendo.com>

	* conf/flumotion-transcoder.ini:
	Added example configuration for DV in Quicktime.
	Renamed the configurations to something more sensible.

2006-10-24  Thomas Vander Stichele  <thomas at apestaart dot org>

	* bin/flumotion-transcoder.in:
	  run as a twisted app

2006-10-21  Thomas Vander Stichele  <thomas at apestaart dot org>

	* Makefile.am:
	  add pychecker target
	* flumotion/transcoder/transcoder.py:
	  fix some bugs shown by pychecker

2006-10-21  Thomas Vander Stichele  <thomas at apestaart dot org>

	* configure.ac:
	  add misc setup.py
	* doc/redhat/flumotion-transcoder.init:
	  fix it up with the new pid writing code;
	  service flumotion-transcoder restart now works
	* flumotion/transcoder/main.py:
	  write pid file
	* flumotion/transcoder/trans.py:
	  remove unused imports
	* flumotion/transcoder/transcoder.py:
	  rename TranscoderTask to InputHandler since that's what it is
	  add errordirectory and move files there that had an error when
	  transcoding
	  fork for a task
	  fix a logic error in _nextTask that made it only ever run tasks
	  for one customer
	* flumotion/transcoder/watcher.py:
	  add a FIXME about a missing method

2006-10-19  Edward Hervey  <edward@fluendo.com>

	* flumotion/transcoder/trans.py:
	Invert the order of audio filters, it is now:
	RAWAUDIO ! audiorate ! audioconvert ! audioresample ! ENCODER
	Implement queue-overrun detection system for streams that don't
	emit 'no-more-pads'

2006-10-18  Thomas Vander Stichele  <thomas at apestaart dot org>

	* flumotion/transcoder/trans.py:
	* flumotion/transcoder/transcoder.py:
	* tests/ogger.py:
	  s/audiochanns/audiochannels/g

2006-10-17  Edward Hervey  <edward@fluendo.com>

	* flumotion/transcoder/trans.py:
	Added audiochanns property to specify the number of audio channels in
	output.
	Added audiorate in the audio encoding bin.
	Set scaling method of videoscale to bilinear.
	* flumotion/transcoder/transcoder.py:
	Added reason to the error signal, adjusted emission of that signal
	accordingly.
	* flumotion/transcoder/watcher.py:
	Fix for files not present before.
	* tests/ogger.py:
	Added specific rate and channel for ogger test profile.
	* TODO:
	Extended items to do and commented others.

2006-10-16  Thomas Vander Stichele  <thomas at apestaart dot org>

	* flumotion/transcoder/transcoder.py:
	  fix cortado link

2006-10-16  Thomas Vander Stichele  <thomas at apestaart dot org>

	* Makefile.am:
	* configure.ac:
	  add tests dir to be cleaned up
	* flumotion/transcoder/trans.py:
	  add timeout param to MultiTranscoder so testing is easier
	  don't use lines longer than 80 chars

2006-10-16  Edward Hervey  <edward@fluendo.com>

	* flumotion/transcoder/trans.py:
	* flumotion/transcoder/transcoder.py:
	* flumotion/transcoder/watcher.py:
	Syntax fixes. Serialize state_change and signal emissions in
	main thread.

2006-10-16  Edward Hervey  <edward@fluendo.com>

	* flumotion/transcoder/Makefile.am:
	* flumotion/transcoder/watcher.py:
	New Watcher class with two subclasses:
	DirectoryWatcher to watch a directory
	FilesWatcher to watch a series of files
	* flumotion/transcoder/trans.py:
	Use the FilesWatcher to figure out when a Pipeline is no longer
	outputting data (deadlocked?) and report the error.
	If the discoverer reports a file isn't a media file, include the
	discovered mimetypes in the logs.
	* flumotion/transcoder/transcoder.py:
	Use the DirectoryWatcher from watcher.py
	small fixes.

2006-10-16  Edward Hervey  <edward@fluendo.com>

	* flumotion/transcoder/trans.py:
	(_decodebinNoMorePadsCb): handle case where decodebin emits
	'no-more-pads' more than once. Make sure we don't connect pads to
	non-existent bins.
	(_buildEncodingBin): Don't create audio (or video) bin if the source
	media doesn't have audio (or video). Don't put a time limit on the
	pre-encoder queues.

2006-10-15  Thomas Vander Stichele  <thomas at apestaart dot org>

	* TODO:
	  add things to work on
	* flumotion/transcoder/trans.py:
	* flumotion/transcoder/transcoder.py:
	  make the transcoder daemon use the factored-out
	  MultiTranscoder object
	  Clean up output, variable names, logging, ...

2006-10-15  Thomas Vander Stichele  <thomas at apestaart dot org>

	* flumotion/transcoder/trans.py:
	* tests/ogger.py:
	  further cleanups
	  handle non-existing files

2006-10-15  Thomas Vander Stichele  <thomas at apestaart dot org>

	* flumotion/transcoder/trans.py:
	  further cleanups, now has a MultiTranscoder separated out
	  that we can test standalone
	* tests/ogger.py:
	  fix up test for standalone MultiTranscoder

2006-10-13  Thomas Vander Stichele  <thomas at apestaart dot org>

	* flumotion-transcoder.spec.in:
	  add dep
	* flumotion/transcoder/transcoder.py:
	  write out a full iframe line
	  round up width and height of applet to multiple of 16

2006-10-13  Thomas Vander Stichele  <thomas at apestaart dot org>

	* flumotion/transcoder/transcoder.py:
	  remove prints, clean up logging a little

2006-10-13  Thomas Vander Stichele  <thomas at apestaart dot org>

	* conf/flumotion-transcoder.ini:
	* flumotion/transcoder/main.py:
	* flumotion/transcoder/transcoder.py:
	  add discovery of transcoded files
	  add generation of .link files for .ogg files that can be served
	  by cortado

2006-10-12  Thomas Vander Stichele  <thomas at apestaart dot org>

	* Makefile.am:
	* transcoder/Makefile.am:
	  pass distcheck

2006-10-12  Thomas Vander Stichele  <thomas at apestaart dot org>

	* Makefile.am:
	* configure.ac:
	* doc/redhat/flutterd.init:
	* doc/redhat/flutterd.sysconfig:
	* flutter.spec.in:
	  rename to flumotion-transcoder

2006-10-12  Thomas Vander Stichele  <thomas at apestaart dot org>

	* bin/Makefile.am:
	* bin/flumotion-transcoder.in:
	* configure.ac:
	* flumotion/__init__.py:
	* flumotion/transcoder/__init__.py:
	* flumotion/transcoder/main.py:
	* flumotion/transcoder/transcoder.py:
	  split out file in modules and a simple script that boots into them

2006-10-12  Thomas Vander Stichele  <thomas at apestaart dot org>

	* configure.ac:
	  check for Flumotion
	* bin/flutterd:
	  use flumotion logging
	  add daemonize and options parsing

2006-10-12  Thomas Vander Stichele  <thomas at apestaart dot org>

	* configure.ac:
	* misc/preamble.py:
	  turn into a flumotion project

2006-10-12  Thomas Vander Stichele  <thomas at apestaart dot org>

	* bin/flutterd:
	  make documentation and comments respect 80 character width
	  add/fix up logging so the log says something useful

2006-10-12  Thomas Vander Stichele  <thomas at apestaart dot org>

	* bin/flutterd:
	  remove print's that should not be there
	* configure.ac:
	  remove check for python headers
	* flutter.spec.in:
	  add buildrequires

2006-10-06  Edward Hervey  <edward@fluendo.com>

	* bin/flutterd:
	Implemented code to create proper video caps depending on:
	_input width, height and pixel-aspect-ratio
	_configured width and/or height and/or pixel-aspect-ratio
	_configured framerate

2006-10-05  Thomas Vander Stichele  <thomas at apestaart dot org>

	* conf/flutterd.ini:
	* flutter.spec.in:
	* test.ini:
	  update spec file and config

2006-10-05  Thomas Vander Stichele  <thomas at apestaart dot org>

	* doc/redhat/flutterd.init:
	* doc/redhat/flutterd.sysconfig:
	* flutter.spec.in:
	* misc/Makefile.am:
	* misc/preamble.py:
	  more autotools goodness

2006-10-05  Thomas Vander Stichele  <thomas at apestaart dot org>

	* LICENSE.Flumotion:
	* Makefile.am:
	* autogen.sh:
	* bin/Makefile.am:
	* configure.ac:
	* flutterd:
	  adding autotools spread

2006-10-05  Edward Hervey  <edward@fluendo.com>

	* flutrans.py:
	* test.ini:
	Initial revision of the Fluendo Transcoding Daemon
